{"version":3,"file":"static/js/323.bb125a38.chunk.js","mappings":"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","sources":["components/EmblemNameplate/EmblemNameplate.tsx","components/Loader/Loader.tsx","pages/EmblemTryOn/EmblemTryOn.tsx","pages/EmblemTryOn/index.tsx","hooks/useEmblems.tsx","util/formatters.ts"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { Emblem } from \"types/emblem\";\r\n\r\nconst EmblemNameplate = ({\r\n  name,\r\n  setName,\r\n  emblem,\r\n  isLead,\r\n}: {\r\n  name: string;\r\n  setName: (name: string) => void;\r\n  emblem: Emblem;\r\n  isLead: boolean;\r\n}) => {\r\n  const [overflowedBy, setOverflowedBy] = useState(0.0);\r\n\r\n  const handleNameChange = (e: React.FormEvent<HTMLInputElement>) => {\r\n    const newName = e.currentTarget.value;\r\n\r\n    if (newName.length <= 26) {\r\n      setName(newName);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div\r\n      style={{\r\n        backgroundImage: `url(https://www.bungie.net${emblem.secondaryIcon})`,\r\n      }}\r\n      className=\"w-[474px] h-[95px] pl-[85px] flex flex-col shadow-lg rounded-sm relative\"\r\n    >\r\n      {isLead ? (\r\n        <svg\r\n          xmlns=\"http://www.w3.org/2000/svg\"\r\n          viewBox=\"0 0 2044.21 2044.21\"\r\n          className=\"absolute w-5 fill-[#ccd32b] -ml-[84px] mt-[1px]\"\r\n          fill=\"currentColor\"\r\n        >\r\n          <polygon points=\"0 0 0 2044.21 2044.21 0 0 0\" />\r\n        </svg>\r\n      ) : (\r\n        <></>\r\n      )}\r\n      <p className=\"absolute font-emblem text-[#d5c154] right-[8px] -top-[6px] text-[36px]\">\r\n        <span className=\"relative font-symbol text-[26px] -top-[5px]\"></span>\r\n        <span className=\"font-semibold drop-shadow-[0_2px_0px_#0003] tracking-[1.4px]\">\r\n          9999\r\n        </span>\r\n      </p>\r\n      <input\r\n        type=\"text\"\r\n        placeholder=\"Click to change\"\r\n        value={name}\r\n        onChange={handleNameChange}\r\n        onBlur={(e) => {\r\n          if (e.currentTarget.scrollWidth !== e.currentTarget.clientWidth) {\r\n            const overflowCalc =\r\n              e.currentTarget.scrollWidth / (e.currentTarget.clientWidth - 45);\r\n            setOverflowedBy(overflowCalc);\r\n          }\r\n        }}\r\n        onFocus={(e) => {\r\n          setOverflowedBy(0);\r\n        }}\r\n        className={\r\n          \"-ml-[16.5px] -m-[3.5px] input max-w-[19.5rem] bg-transparent outline-transparent \" +\r\n          \"font-emblem tracking-[0.8px] font-semibold text-white placeholder-white drop-shadow-[0_2px_0px_#0003]\"\r\n        }\r\n        style={{ fontSize: overflowedBy > 0.0 ? 27.0 / overflowedBy : 27 }}\r\n      />\r\n\r\n      <p className=\"text-[22px] -mt-[9px] opacity-40 font-emblem font-medium tracking-[0.8px] text-white\">\r\n        <span className=\"font-symbol\">⓫</span> Paragon\r\n      </p>\r\n      <p className=\"text-[23px] -mt-[6px] opacity-30 font-emblem font-medium tracking-[0.8px] text-white\">\r\n        winnow.oatsfx.com\r\n      </p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EmblemNameplate;\r\n","const Loader: React.FC = () => {\r\n  return (\r\n    // bray.tech\r\n    <svg\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      viewBox=\"0 0 62.08 71.68\"\r\n      className=\"fill-primary opacity-25 w-1/6\"\r\n    >\r\n      <g>\r\n        <polygon\r\n          points=\"30.04 59.7 10.87 48.64 1 54.34 30.04 71.1 30.04 59.7\"\r\n          fill-opacity=\"0\"\r\n        >\r\n          <animate\r\n            attributeName=\"fill-opacity\"\r\n            values=\"1;0;0;0;0;0;1\"\r\n            dur=\"3\"\r\n            repeatCount=\"indefinite\"\r\n          ></animate>\r\n        </polygon>\r\n        <polygon\r\n          points=\"61.08 54.34 51.2 48.64 32.04 59.7 32.04 71.1 61.08 54.34\"\r\n          fill-opacity=\"0\"\r\n        >\r\n          <animate\r\n            attributeName=\"fill-opacity\"\r\n            values=\"0;1;0;0;0;0;0\"\r\n            dur=\"3\"\r\n            repeatCount=\"indefinite\"\r\n          ></animate>\r\n        </polygon>\r\n        <polygon\r\n          points=\"52.2 24.77 52.2 46.91 62.08 52.6 62.08 19.07 52.2 24.77\"\r\n          fill-opacity=\"0\"\r\n        >\r\n          <animate\r\n            attributeName=\"fill-opacity\"\r\n            values=\"0;0;1;0;0;0;0\"\r\n            dur=\"3\"\r\n            repeatCount=\"indefinite\"\r\n          ></animate>\r\n        </polygon>\r\n        <polygon\r\n          points=\"32.04 0.58 32.04 11.97 51.2 23.04 61.08 17.34 32.04 0.58\"\r\n          fill-opacity=\"0\"\r\n        >\r\n          <animate\r\n            attributeName=\"fill-opacity\"\r\n            values=\"0;0;0;1;0;0;0\"\r\n            dur=\"3\"\r\n            repeatCount=\"indefinite\"\r\n          ></animate>\r\n        </polygon>\r\n        <polygon\r\n          points=\"1 17.34 10.87 23.04 30.04 11.97 30.04 0.58 1 17.34\"\r\n          fill-opacity=\"0\"\r\n        >\r\n          <animate\r\n            attributeName=\"fill-opacity\"\r\n            values=\"0;0;0;0;1;0;0\"\r\n            dur=\"3\"\r\n            repeatCount=\"indefinite\"\r\n          ></animate>\r\n        </polygon>\r\n        <polygon\r\n          points=\"9.87 46.91 9.87 24.77 0 19.07 0 52.6 9.87 46.91\"\r\n          fill-opacity=\"0\"\r\n        >\r\n          <animate\r\n            attributeName=\"fill-opacity\"\r\n            values=\"0;0;0;0;0;1;0\"\r\n            dur=\"3\"\r\n            repeatCount=\"indefinite\"\r\n          ></animate>\r\n        </polygon>\r\n      </g>\r\n      <g>\r\n        <polygon\r\n          points=\"30.04 47.09 21.8 42.33 12.9 47.47 30.04 57.36 30.04 47.09\"\r\n          fill-opacity=\"0\"\r\n        >\r\n          <animate\r\n            attributeName=\"fill-opacity\"\r\n            values=\"1;1;0;0;0;0;1\"\r\n            dur=\"1.5\"\r\n            repeatCount=\"indefinite\"\r\n          ></animate>\r\n        </polygon>\r\n        <polygon\r\n          points=\"20.8 40.6 20.8 31.08 11.9 25.95 11.9 45.73 20.8 40.6\"\r\n          fill-opacity=\"0\"\r\n        >\r\n          <animate\r\n            attributeName=\"fill-opacity\"\r\n            values=\"0;1;1;0;0;0;0\"\r\n            dur=\"1.5\"\r\n            repeatCount=\"indefinite\"\r\n          ></animate>\r\n        </polygon>\r\n        <polygon\r\n          points=\"21.8 29.35 30.04 24.59 30.04 14.32 12.9 24.21 21.8 29.35\"\r\n          fill-opacity=\"0\"\r\n        >\r\n          <animate\r\n            attributeName=\"fill-opacity\"\r\n            values=\"0;0;1;1;0;0;0\"\r\n            dur=\"1.5\"\r\n            repeatCount=\"indefinite\"\r\n          ></animate>\r\n        </polygon>\r\n        <polygon\r\n          points=\"32.04 14.32 32.04 24.59 40.28 29.35 49.17 24.21 32.04 14.32\"\r\n          fill-opacity=\"0\"\r\n        >\r\n          <animate\r\n            attributeName=\"fill-opacity\"\r\n            values=\"0;0;0;1;1;0;0\"\r\n            dur=\"1.5\"\r\n            repeatCount=\"indefinite\"\r\n          ></animate>\r\n        </polygon>\r\n        <polygon\r\n          points=\"41.28 31.08 41.28 40.6 50.17 45.73 50.17 25.95 41.28 31.08\"\r\n          fill-opacity=\"0\"\r\n        >\r\n          <animate\r\n            attributeName=\"fill-opacity\"\r\n            values=\"0;0;0;0;1;1;0\"\r\n            dur=\"1.5\"\r\n            repeatCount=\"indefinite\"\r\n          ></animate>\r\n        </polygon>\r\n        <polygon\r\n          points=\"40.28 42.33 32.04 47.09 32.04 57.36 49.17 47.47 40.28 42.33\"\r\n          fill-opacity=\"0\"\r\n        >\r\n          <animate\r\n            attributeName=\"fill-opacity\"\r\n            values=\"1;0;0;0;0;1;1\"\r\n            dur=\"1.5\"\r\n            repeatCount=\"indefinite\"\r\n          ></animate>\r\n        </polygon>\r\n      </g>\r\n    </svg>\r\n  );\r\n};\r\n\r\nexport default Loader;\r\n","import { EmblemNameplate } from \"components/EmblemNameplate\";\r\nimport { Loader } from \"components/Loader\";\r\nimport { useEmblems } from \"hooks/useEmblems\";\r\nimport { useEffect, useMemo, useState } from \"react\";\r\nimport { useParams, useSearchParams } from \"react-router-dom\";\r\nimport { Emblem } from \"types/emblem\";\r\nimport { Alert } from \"types/util\";\r\nimport { replaceNonEnglish } from \"util/formatters\";\r\n\r\nconst VerityCallouts: React.FC = () => {\r\n  const [alert, setAlert] = useState<Alert>({\r\n    alertType: \"alert\",\r\n    message: \"\",\r\n  });\r\n  const [searchParams] = useSearchParams();\r\n\r\n  const { data: emblemData, loading: emblemLoading } = useEmblems();\r\n  const [emblemQuery, setEmblemQuery] = useState(\"\");\r\n  const [showSearch, setShowSearch] = useState(false);\r\n  const [isLead, setIsLead] = useState(false);\r\n  const [name, setName] = useState(\r\n    searchParams.get(\"name\")\r\n      ? (searchParams.get(\"name\" as string) as string)\r\n      : \"\"\r\n  );\r\n\r\n  const [selectedEmblem, setSelectedEmblem] = useState<Emblem>({\r\n    hash: 0,\r\n    name: \"\",\r\n    icon: \"\",\r\n    secondaryIcon: \"\",\r\n    secondaryOverlay: \"\",\r\n    secondarySpecial: \"\",\r\n  });\r\n\r\n  const handleNameChange = (e: React.FormEvent<HTMLInputElement>) => {\r\n    const newName = e.currentTarget.value;\r\n    if (newName.length <= 18) {\r\n      setName(newName);\r\n    }\r\n  };\r\n\r\n  const handleEmblemSearch = (e: React.FormEvent<HTMLInputElement>) => {\r\n    setEmblemQuery(e.currentTarget.value);\r\n  };\r\n\r\n  useMemo(() => {\r\n    if (!emblemLoading) {\r\n      if (searchParams.get(\"emblem\")) {\r\n        if (\r\n          emblemData.some((x) => x.hash === Number(searchParams.get(\"emblem\")))\r\n        ) {\r\n          const index = emblemData.findIndex(\r\n            (x) => x.hash === Number(searchParams.get(\"emblem\"))\r\n          );\r\n          setSelectedEmblem(emblemData[index]);\r\n        }\r\n      } else {\r\n        setSelectedEmblem(\r\n          emblemData[Math.floor(Math.random() * emblemData.length)]\r\n        );\r\n      }\r\n    }\r\n  }, [emblemData]);\r\n\r\n  return (\r\n    <div className=\"flex w-full flex-col items-center gap-2\">\r\n      <p className=\"font-bold text-2xl font-display tracking-tighter text-accent\">\r\n        Emblem Try On\r\n      </p>\r\n\r\n      {emblemLoading ? (\r\n        <Loader />\r\n      ) : (\r\n        <div className=\"flex w-full flex-col items-center gap-3\">\r\n          <EmblemNameplate\r\n            name={name}\r\n            setName={setName}\r\n            emblem={selectedEmblem}\r\n            isLead={isLead}\r\n          />\r\n          <p>Click on the name to change it!</p>\r\n          <p className=\"text-lg\">\r\n            Trying on{\" \"}\r\n            <span className=\"text-primary font-semibold\">\r\n              {selectedEmblem.name}\r\n            </span>\r\n          </p>\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Search an emblem\"\r\n            className=\"input input-bordered w-full max-w-xs\"\r\n            onChange={handleEmblemSearch}\r\n            onFocus={() => setShowSearch(true)}\r\n            onBlur={() => setShowSearch(false)}\r\n          />\r\n          {showSearch &&\r\n          emblemData.filter(\r\n            (x) =>\r\n              (replaceNonEnglish(x.name).toLowerCase().includes(emblemQuery) ||\r\n                x.name.toLowerCase().includes(emblemQuery)) &&\r\n              emblemQuery.length > 0\r\n          ).length > 0 ? (\r\n            <div className=\"absolute top-[380px] z-[50] border w-80 rounded gap-1 p-2 flex flex-col bg-base-100\">\r\n              {emblemData\r\n                .filter(\r\n                  (x) =>\r\n                    (replaceNonEnglish(x.name)\r\n                      .toLowerCase()\r\n                      .includes(emblemQuery) ||\r\n                      x.name.toLowerCase().includes(emblemQuery)) &&\r\n                    emblemQuery.length > 0\r\n                )\r\n                .slice(0, 7)\r\n                .map((emblem) => (\r\n                  <p\r\n                    className=\"flex align-left w-full items-center gap-2 hover:cursor-pointer\"\r\n                    onMouseDown={() => setSelectedEmblem(emblem)}\r\n                    key={emblem.hash}\r\n                  >\r\n                    <img\r\n                      className=\"w-8 rounded\"\r\n                      src={\"https://www.bungie.net\" + emblem.icon}\r\n                    />\r\n                    {emblem.name}\r\n                  </p>\r\n                ))}\r\n            </div>\r\n          ) : (\r\n            <></>\r\n          )}\r\n          <div className=\"flex gap-4\">\r\n            <button\r\n              className={\"btn btn-success\"}\r\n              onClick={() => {\r\n                navigator.clipboard.writeText(\r\n                  `${window.location.href}?emblem=${selectedEmblem.hash}${\r\n                    name ? `&name=${name}` : \"\"\r\n                  }`\r\n                );\r\n                setAlert({\r\n                  alertType: \"alert-info\",\r\n                  message: `Copied link to clipboard! ${\r\n                    name ? name : \"Guardian\"\r\n                  } trying on ${selectedEmblem.name}.`,\r\n                });\r\n              }}\r\n            >\r\n              Share\r\n            </button>\r\n            <details className=\"dropdown dropdown-center\">\r\n              <summary className=\"btn w-24\">Tools</summary>\r\n              <ul className=\"p-2 shadow-xl menu dropdown-content bg-base-100 rounded-box w-52\">\r\n                <li>\r\n                  <a\r\n                    onClick={() =>\r\n                      setSelectedEmblem(\r\n                        emblemData[\r\n                          Math.floor(Math.random() * emblemData.length)\r\n                        ]\r\n                      )\r\n                    }\r\n                  >\r\n                    Randomize Emblem\r\n                  </a>\r\n                </li>\r\n                <li>\r\n                  <a onClick={() => setIsLead((old) => !old)}>\r\n                    Toggle Fireteam Lead\r\n                  </a>\r\n                </li>\r\n                <li>\r\n                  <a\r\n                    href={\r\n                      \"https://destinyemblemcollector.com/emblem?id=\" +\r\n                      selectedEmblem.hash\r\n                    }\r\n                    target=\"_blank\"\r\n                  >\r\n                    View on DEC\r\n                  </a>\r\n                </li>\r\n                <li>\r\n                  <a\r\n                    href={\"https://emblem.report/\" + selectedEmblem.hash}\r\n                    target=\"_blank\"\r\n                  >\r\n                    View on emblem.report\r\n                  </a>\r\n                </li>\r\n\r\n                <li className=\"pointer-events-none\">\r\n                  <p className=\"text-neutral\">More coming soon...</p>\r\n                </li>\r\n\r\n                {/* <li>\r\n                  <a>Toggle Fireteam Lead</a>\r\n                </li> */}\r\n              </ul>\r\n            </details>\r\n          </div>\r\n          {alert.message.length > 0 ? (\r\n            <div role=\"alert\" className={\"alert w-2/3 \" + alert.alertType}>\r\n              <svg\r\n                xmlns=\"http://www.w3.org/2000/svg\"\r\n                fill=\"none\"\r\n                viewBox=\"0 0 24 24\"\r\n                className=\"stroke-current shrink-0 w-6 h-6\"\r\n              >\r\n                <path\r\n                  strokeLinecap=\"round\"\r\n                  strokeLinejoin=\"round\"\r\n                  strokeWidth=\"2\"\r\n                  d=\"M13 16h-1v-4h-1m1-4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z\"\r\n                ></path>\r\n              </svg>\r\n              <span>{alert.message}</span>\r\n            </div>\r\n          ) : (\r\n            <></>\r\n          )}\r\n          <p className=\"font-light\">\r\n            As formerly seen on{\" \"}\r\n            <a className=\"underline\" href=\"https://levante.dev\" target=\"_blank\">\r\n              Levante\r\n            </a>\r\n          </p>\r\n        </div>\r\n      )}\r\n\r\n      <div className=\"divider font-display\" />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default VerityCallouts;\r\n","import EmblemTryOn from \"./EmblemTryOn\";\r\nexport default EmblemTryOn;\r\n","import { useEffect, useState } from \"react\";\r\nimport { Emblem } from \"types/emblem\";\r\n\r\nexport const useEmblems = () => {\r\n  const url = \"https://www.bungie.net/Platform/Destiny2/Manifest/\";\r\n  const HEADER = \"https://www.bungie.net\";\r\n  const [data, setData] = useState<Emblem[]>([]);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      const newEmblems = [];\r\n      try {\r\n        const response = await fetch(url);\r\n        if (!response.ok) {\r\n          throw new Error(\"Failed to fetch data\");\r\n        }\r\n        const jsonData = await response.json();\r\n\r\n        const invItemUrl =\r\n          jsonData.Response.jsonWorldComponentContentPaths[\"en\"]\r\n            .DestinyInventoryItemDefinition;\r\n\r\n        try {\r\n          const response = await fetch(`${HEADER}${invItemUrl}`);\r\n          if (!response.ok) {\r\n            throw new Error(\"Failed to fetch data\");\r\n          }\r\n          const jsonData = await response.json();\r\n          for (let key in jsonData) {\r\n            if (jsonData[key].itemTypeDisplayName === \"Emblem\") {\r\n              const hash = jsonData[key].hash;\r\n              let name = jsonData[key].displayProperties.name;\r\n              const icon = jsonData[key].displayProperties.icon;\r\n              const secIcon = jsonData[key].secondaryIcon;\r\n              const secOverlay = jsonData[key].secondaryOverlay;\r\n              const secSpecial = jsonData[key].secondarySpecial;\r\n\r\n              // Special name handling\r\n              if (hash === 1968995963) {\r\n                name += \" (Sunflower)\";\r\n              }\r\n              if (name && icon && secIcon && secOverlay && secSpecial) {\r\n                newEmblems.push({\r\n                  hash: hash,\r\n                  name: name,\r\n                  icon: icon,\r\n                  secondaryIcon: secIcon,\r\n                  secondaryOverlay: secOverlay,\r\n                  secondarySpecial: secSpecial,\r\n                });\r\n              }\r\n            }\r\n          }\r\n        } catch (error) {\r\n          console.log(error);\r\n        } finally {\r\n        }\r\n        setData(newEmblems);\r\n      } catch (error) {\r\n        console.log(error);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n    fetchData();\r\n  }, [url]);\r\n\r\n  return { data, loading };\r\n};\r\n","import {\r\n  Dissection,\r\n  InsideShape,\r\n  OutsideShape,\r\n  OutsideShapeCalls,\r\n  VerityResult,\r\n  VeritySide,\r\n} from \"types/verity\";\r\n\r\nconst sides: VeritySide[] = [\"left\", \"middle\", \"right\"];\r\n\r\nexport const createCommaSeparatedString = (arr: string[]): string => {\r\n  if (arr.length === 0) return \"\";\r\n  if (arr.length === 1) return arr[0];\r\n  if (arr.length === 2) return `${arr[0]} and ${arr[1]}`;\r\n\r\n  const allButLast = arr.slice(0, -1).join(\", \");\r\n  const lastItem = arr[arr.length - 1];\r\n\r\n  return `${allButLast}, and ${lastItem}`;\r\n};\r\n\r\nexport const shape3dTo2d: { [key in OutsideShape]: InsideShape[] } = {\r\n  cone: [\"circle\", \"triangle\"],\r\n  cube: [\"square\", \"square\"],\r\n  cylinder: [\"circle\", \"square\"],\r\n  prism: [\"triangle\", \"square\"],\r\n  pyramid: [\"triangle\", \"triangle\"],\r\n  sphere: [\"circle\", \"circle\"],\r\n};\r\n\r\nexport const shape2dTo3d = (\r\n  insideShapes: InsideShape[]\r\n): OutsideShape | null => {\r\n  for (const [outsideShape, mappedInsideShapes] of Object.entries(\r\n    shape3dTo2d\r\n  )) {\r\n    if (\r\n      JSON.stringify(mappedInsideShapes.sort()) ===\r\n      JSON.stringify(insideShapes.sort())\r\n    ) {\r\n      return outsideShape as OutsideShape;\r\n    }\r\n  }\r\n  return null; // Return null if no matching OutsideShape is found\r\n};\r\n\r\nexport const insideShapeToNeededShapes: {\r\n  [key in InsideShape]: InsideShape[];\r\n} = {\r\n  circle: [\"triangle\", \"square\"],\r\n  square: [\"circle\", \"triangle\"],\r\n  triangle: [\"circle\", \"square\"],\r\n};\r\n\r\nexport const getAvailableShapes = (\r\n  outsideShapes: OutsideShapeCalls\r\n): InsideShape[] => {\r\n  const availableShapes: InsideShape[] = [\r\n    \"circle\",\r\n    \"circle\",\r\n    \"triangle\",\r\n    \"triangle\",\r\n    \"square\",\r\n    \"square\",\r\n  ];\r\n  for (const call of Object.values(outsideShapes)) {\r\n    if (call === null) {\r\n      continue;\r\n    }\r\n    for (const add of shape3dTo2d[call as keyof typeof shape3dTo2d]) {\r\n      availableShapes.splice(availableShapes.indexOf(add), 1);\r\n    }\r\n  }\r\n  return availableShapes;\r\n};\r\n\r\nexport const getOutsideShapesLeft = (\r\n  insideShapes: InsideShape[]\r\n): OutsideShape[] => {\r\n  const shapeCounts = insideShapes.reduce((counts, shape) => {\r\n    counts[shape] = ((counts[shape] || 0) as number) + 1;\r\n    return counts;\r\n  }, {} as { [key in InsideShape]?: number });\r\n  const possibleShapes: OutsideShape[] = [];\r\n  if (shapeCounts.circle === 2) possibleShapes.push(\"sphere\");\r\n  if (shapeCounts.square === 2) possibleShapes.push(\"cube\");\r\n  if (shapeCounts.triangle === 2) possibleShapes.push(\"pyramid\");\r\n  if (shapeCounts.circle && shapeCounts.triangle) possibleShapes.push(\"cone\");\r\n  if (shapeCounts.circle && shapeCounts.square) possibleShapes.push(\"cylinder\");\r\n  if (shapeCounts.triangle && shapeCounts.square) possibleShapes.push(\"prism\");\r\n\r\n  return possibleShapes;\r\n};\r\n\r\nexport const replaceNonEnglish = (str: string) => {\r\n  return str\r\n    .replace(\"ê\", \"e\")\r\n    .replace(\"à\", \"a\")\r\n    .replace(\"È\", \"E\")\r\n    .replace(\"ö\", \"o\")\r\n    .replace(\"…\", \"...\");\r\n};\r\n"],"names":["_ref","name","setName","emblem","isLead","overflowedBy","setOverflowedBy","useState","_jsxs","style","backgroundImage","concat","secondaryIcon","className","children","_jsx","xmlns","viewBox","fill","points","_Fragment","type","placeholder","value","onChange","e","newName","currentTarget","length","onBlur","scrollWidth","clientWidth","overflowCalc","onFocus","fontSize","Loader","attributeName","values","dur","repeatCount","VerityCallouts","alert","setAlert","alertType","message","searchParams","useSearchParams","data","emblemData","loading","emblemLoading","useEmblems","url","setData","setLoading","useEffect","async","newEmblems","response","fetch","ok","Error","invItemUrl","json","Response","jsonWorldComponentContentPaths","DestinyInventoryItemDefinition","jsonData","key","itemTypeDisplayName","hash","displayProperties","icon","secIcon","secOverlay","secondaryOverlay","secSpecial","secondarySpecial","push","error","console","log","fetchData","emblemQuery","setEmblemQuery","showSearch","setShowSearch","setIsLead","get","selectedEmblem","setSelectedEmblem","useMemo","some","x","Number","index","findIndex","Math","floor","random","EmblemNameplate","filter","replaceNonEnglish","toLowerCase","includes","slice","map","onMouseDown","src","onClick","navigator","clipboard","writeText","window","location","href","old","target","role","strokeLinecap","strokeLinejoin","strokeWidth","d","createCommaSeparatedString","arr","allButLast","join","lastItem","shape3dTo2d","cone","cube","cylinder","prism","pyramid","sphere","shape2dTo3d","insideShapes","outsideShape","mappedInsideShapes","Object","entries","JSON","stringify","sort","insideShapeToNeededShapes","circle","square","triangle","getAvailableShapes","outsideShapes","availableShapes","call","add","splice","indexOf","getOutsideShapesLeft","shapeCounts","reduce","counts","shape","possibleShapes","str","replace"],"sourceRoot":""}