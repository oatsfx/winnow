{"version":3,"file":"static/js/145.73583fdf.chunk.js","mappings":"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","sources":["components/Shapes/Circle/Circle.tsx","components/Shapes/Square/Square.tsx","components/Shapes/Triangle/Triangle.tsx","components/InsideCallouts/InsideCallouts.tsx","components/Shapes/Cone/Cone.tsx","components/Shapes/Cube/Cube.tsx","components/Shapes/Cylinder/Cylinder.tsx","components/Shapes/Prism/Prism.tsx","components/Shapes/Pyramid/Pyramid.tsx","components/Shapes/Sphere/Sphere.tsx","components/OutsideCallouts/OutsideCallouts.tsx","pages/VerityCalculator/VerityCalculator.tsx","pages/VerityCalculator/index.tsx","util/formatters.ts"],"sourcesContent":["const Circle = () => {\r\n  return (\r\n    <svg\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      version=\"1.1\"\r\n      viewBox=\"0 0 106.54 106.54\"\r\n      className=\"w-6\"\r\n      fill=\"currentColor\"\r\n    >\r\n      <path d=\"M53.27,8c24.96,0,45.27,20.31,45.27,45.27s-20.31,45.27-45.27,45.27S8,78.23,8,53.27,28.31,8,53.27,8M53.27,0C23.85,0,0,23.85,0,53.27s23.85,53.27,53.27,53.27,53.27-23.85,53.27-53.27S82.69,0,53.27,0h0Z\" />\r\n    </svg>\r\n  );\r\n};\r\n\r\nexport default Circle;\r\n","const Square = () => {\r\n  return (\r\n    <svg\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      version=\"1.1\"\r\n      viewBox=\"0 0 106.69 106.69\"\r\n      className=\"w-6\"\r\n      fill=\"currentColor\"\r\n    >\r\n      <path d=\"M0,0v106.69h106.69V0H0ZM99.44,99.44H7.24V7.24h92.2v92.2Z\" />\r\n    </svg>\r\n  );\r\n};\r\n\r\nexport default Square;\r\n","const Triangle = () => {\r\n  return (\r\n    <svg\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      version=\"1.1\"\r\n      viewBox=\"0 0 105.64 91.48\"\r\n      className=\"w-6\"\r\n      fill=\"currentColor\"\r\n    >\r\n      <path d=\"M52.82,16l38.96,67.48H13.86S52.82,16,52.82,16M52.82,0L0,91.48h105.64S52.82,0,52.82,0h0Z\" />\r\n    </svg>\r\n  );\r\n};\r\n\r\nexport default Triangle;\r\n","import { Circle } from \"components/Shapes/Circle\";\r\nimport { Square } from \"components/Shapes/Square\";\r\nimport { Triangle } from \"components/Shapes/Triangle\";\r\nimport { InsideShape, InsideShapeCalls, VeritySide } from \"types/verity\";\r\n\r\nconst insideShapes: InsideShape[] = [\"square\", \"triangle\", \"circle\"];\r\n\r\nconst shapes: { [key in InsideShape]: JSX.Element } = {\r\n  circle: <Circle />,\r\n  square: <Square />,\r\n  triangle: <Triangle />,\r\n};\r\n\r\nconst InsideCallouts = ({\r\n  side,\r\n  selectedShapes,\r\n  handleInsideShapeChange,\r\n}: {\r\n  side: VeritySide;\r\n  selectedShapes: InsideShapeCalls;\r\n  handleInsideShapeChange: (side: VeritySide, shape: InsideShape) => void;\r\n}) => {\r\n  return (\r\n    <div className=\"flex flex-col gap-2 py-2\">\r\n      <div className=\"flex items-center gap-2 justify-center\">\r\n        {insideShapes.map((shape) => (\r\n          <button\r\n            className={\r\n              \"w-16 btn\" +\r\n              (selectedShapes[side as keyof typeof selectedShapes] === shape\r\n                ? \" btn-accent\"\r\n                : \"\")\r\n            }\r\n            onClick={() => {\r\n              handleInsideShapeChange(side, shape);\r\n            }}\r\n            disabled={\r\n              Object.values(selectedShapes).includes(\r\n                shape\r\n              ) /* Selected shapes has the button's shape */ &&\r\n              selectedShapes[side as keyof typeof selectedShapes] !==\r\n                shape /* Selected shape isn't the button */\r\n            }\r\n            key={shape}\r\n          >\r\n            {shapes[shape as keyof typeof shapes]}\r\n          </button>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default InsideCallouts;\r\n","const Cone = () => {\r\n  return (\r\n    <svg\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      version=\"1.1\"\r\n      viewBox=\"0 0 98.24 120.7\"\r\n      className=\"w-6\"\r\n      fill=\"currentColor\"\r\n    >\r\n      <path d=\"M58.07,5.76s-.04-.08-.05-.12c-1.64-3.48-5.04-5.64-8.89-5.64s-7.25,2.16-8.95,5.76L.35,97.98c-.23.53-.35,1.09-.35,1.67,0,13.82,24.71,21.05,49.12,21.05s49.12-7.23,49.12-21.05c0-.57-.12-1.14-.35-1.67L58.07,5.76ZM49.13,112.28c-23.42,0-39.29-6.96-40.62-11.97L47.85,9.23c.65-1.39,1.85-1.38,2.52-.04l39.36,91.13c-1.33,5.01-17.2,11.97-40.62,11.97h0Z\" />\r\n    </svg>\r\n  );\r\n};\r\n\r\nexport default Cone;\r\n","const Cube = () => {\r\n  return (\r\n    <svg\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      version=\"1.1\"\r\n      viewBox=\"0 0 110 135\"\r\n      fillRule=\"evenodd\"\r\n      className=\"w-6\"\r\n      fill=\"currentColor\"\r\n    >\r\n      <path d=\"M100,37.4L58,13.2c-1.8-1.1-4.1-1.1-5.9,0L10,37.4c-1.8,1.1-3,3-3,5.1v48.5c0,2.1,1.1,4.1,3,5.1l42,24.3c1.8,1.1,4.1,1.1,5.9,0l42-24.3c1.8-1.1,3-3,3-5.1v-48.5c0-2.1-1.1-4.1-3-5.1ZM60.9,8c-3.7-2.1-8.2-2.1-11.8,0L7.1,32.3c-3.7,2.1-5.9,6-5.9,10.3v48.5c0,4.2,2.3,8.1,5.9,10.3l42,24.3c3.7,2.1,8.2,2.1,11.8,0l42-24.3c3.7-2.1,5.9-6,5.9-10.3v-48.5c0-4.2-2.3-8.1-5.9-10.3L60.9,8Z\" />\r\n      <path d=\"M5,38.7c.8-1.4,2.6-1.9,4-1.1l47.4,26.7c1.4.8,1.9,2.6,1.1,4-.8,1.4-2.6,1.9-4,1.1L6.2,42.7c-1.4-.8-1.9-2.6-1.1-4h0Z\" />\r\n      <path d=\"M55,63.8c1.6,0,3,1.3,3,3v56.3c0,1.6-1.3,3-3,3s-3-1.3-3-3v-56.3c0-1.6,1.3-3,3-3Z\" />\r\n      <path d=\"M105,38.7c.8,1.4.3,3.2-1.1,4l-47.4,26.7c-1.4.8-3.2.3-4-1.1-.8-1.4-.3-3.2,1.1-4l47.4-26.7c1.4-.8,3.2-.3,4,1.1h0Z\" />\r\n    </svg>\r\n  );\r\n};\r\n\r\nexport default Cube;\r\n","const Cylinder = () => {\r\n  return (\r\n    <svg\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      version=\"1.1\"\r\n      viewBox=\"0 0 72.42 120.7\"\r\n      className=\"w-5\"\r\n      fill=\"currentColor\"\r\n    >\r\n      <path d=\"M36.21,0C15.57,0,0,8.65,0,20.12v80.47c0,11.47,15.57,20.12,36.21,20.12s36.21-8.65,36.21-20.12V20.12C72.42,8.65,56.86,0,36.21,0ZM36.21,8.05c16.12,0,28.16,6.37,28.16,12.07s-12.05,12.07-28.16,12.07-28.16-6.37-28.16-12.07,12.05-12.07,28.16-12.07ZM36.21,112.66c-16.12,0-28.16-6.37-28.16-12.07V33.05c8.5,5.06,18.28,7.56,28.16,7.18,9.88.38,19.66-2.12,28.16-7.18v67.53c0,5.7-12.05,12.07-28.16,12.07Z\" />\r\n    </svg>\r\n  );\r\n};\r\n\r\nexport default Cylinder;\r\n","const Prism = () => {\r\n  return (\r\n    <svg\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      version=\"1.1\"\r\n      viewBox=\"0 0 110 135\"\r\n      fillRule=\"evenodd\"\r\n      className=\"w-7\"\r\n      fill=\"currentColor\"\r\n    >\r\n      <g>\r\n        <path d=\"M86.9,104.2l-26.5,21.9c-3.1,2.6-7.7,2.6-10.8,0l-26.5-21.9c-2-1.6-3.1-4-3.1-6.5V15.4c0-4.7,3.8-8.5,8.5-8.5h53c4.7,0,8.5,3.8,8.5,8.5v82.2c0,2.5-1.1,4.9-3.1,6.5ZM55,32.8l24-20.2H30.7l24.3,20.2ZM25.7,16.1v79c0,2.5,1.1,4.9,3.1,6.5,7.7,6.5,15.5,13.1,23.2,19.5V37.8l-26.3-21.7ZM57.7,37.8v83.3l23.6-19.5c1.9-1.6,3.1-4,3.1-6.5V16.1l-26.6,21.7Z\" />\r\n      </g>\r\n    </svg>\r\n  );\r\n};\r\n\r\nexport default Prism;\r\n","const Pyramid = () => {\r\n  return (\r\n    <svg\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      version=\"1.1\"\r\n      viewBox=\"0 0 107.67 103.56\"\r\n      fillRule=\"evenodd\"\r\n      className=\"w-7\"\r\n      fill=\"currentColor\"\r\n    >\r\n      <path d=\"M56.96,1.54c-.75-.98-1.91-1.54-3.14-1.54s-2.39.57-3.14,1.54L.83,66.15c-.69.88-.96,2.02-.77,3.13.2,1.1.86,2.07,1.81,2.65l49.87,31.04c.65.4,1.37.59,2.1.59s1.45-.2,2.1-.59l49.87-31.04c.95-.59,1.61-1.56,1.81-2.65.2-1.1-.08-2.23-.77-3.13L56.96,1.54ZM49.88,15.57v76.92l-40.1-24.97L49.88,15.57ZM57.8,92.48V15.57l40.1,51.95-40.1,24.95Z\" />\r\n    </svg>\r\n  );\r\n};\r\n\r\nexport default Pyramid;\r\n","const Sphere = () => {\r\n  return (\r\n    <svg\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      version=\"1.1\"\r\n      viewBox=\"0 0 106.78 106.78\"\r\n      fillRule=\"evenodd\"\r\n      className=\"w-7\"\r\n      fill=\"currentColor\"\r\n    >\r\n      <path d=\"M53.39,0C23.94,0,0,23.94,0,53.39s23.94,53.39,53.39,53.39,53.39-23.94,53.39-53.39S82.84,0,53.39,0ZM53.39,4.72c26.86,0,48.67,21.81,48.67,48.67-.11,3.71-16.75,10.68-48.67,10.68S4.83,57.1,4.72,53.39c0-26.86,21.81-48.67,48.67-48.67ZM53.39,102.06c-24.39,0-44.62-18.1-48.11-41.48,9.1,5.51,28.66,8.32,48.11,8.32s39-2.81,48.11-8.32c-3.48,23.38-23.72,41.48-48.11,41.48Z\" />\r\n      <path d=\"M73.62,43.72c2.02.22,4.05.45,5.84.79h.34c1.12,0,2.14-.79,2.36-2.02.22-1.35-.67-2.47-2.02-2.7-1.91-.34-4.05-.56-6.07-.79-1.35-.11-2.47.79-2.59,2.14-.11,1.35.79,2.47,2.14,2.59Z\" />\r\n      <path d=\"M58.11,42.71c2.02,0,4.05.11,5.96.22h.11c1.24,0,2.36-1.01,2.36-2.25.11-1.35-.9-2.47-2.25-2.47-2.02-.11-4.05-.22-6.07-.22-1.35,0-2.36,1.01-2.47,2.36,0,1.24,1.12,2.36,2.36,2.36Z\" />\r\n      <path d=\"M88.68,46.42c2.02.56,3.93,1.12,5.51,1.69.22.11.56.11.79.11,1.01,0,1.91-.56,2.25-1.57.45-1.24-.22-2.59-1.46-3.03-1.8-.67-3.82-1.24-5.96-1.8-1.24-.34-2.59.45-2.92,1.69-.22,1.24.56,2.59,1.8,2.92Z\" />\r\n      <path d=\"M11.69,48.22c.22,0,.56,0,.79-.11,1.69-.56,3.48-1.12,5.51-1.69,1.24-.34,2.02-1.57,1.69-2.92-.34-1.24-1.57-2.02-2.92-1.69-2.14.56-4.16,1.12-5.96,1.8-1.24.45-1.91,1.8-1.46,3.03.45,1.01,1.46,1.57,2.36,1.57Z\" />\r\n      <path d=\"M42.49,42.94h.11c1.91-.11,3.93-.22,5.96-.22,1.35,0,2.36-1.12,2.36-2.47s-1.12-2.36-2.47-2.36c-2.02,0-4.05.11-6.07.22-1.35.11-2.36,1.24-2.25,2.47.11,1.46,1.12,2.36,2.36,2.36Z\" />\r\n      <path d=\"M26.98,44.62h.34c1.91-.34,3.82-.56,5.84-.79,1.35-.11,2.25-1.35,2.14-2.59-.11-1.35-1.35-2.25-2.59-2.14-2.14.22-4.16.56-6.07.79-1.35.22-2.25,1.46-2.02,2.7.11,1.12,1.12,2.02,2.36,2.02Z\" />\r\n    </svg>\r\n  );\r\n};\r\n\r\nexport default Sphere;\r\n","import { Cone } from \"components/Shapes/Cone\";\r\nimport { Cube } from \"components/Shapes/Cube\";\r\nimport { Cylinder } from \"components/Shapes/Cylinder\";\r\nimport { Prism } from \"components/Shapes/Prism\";\r\nimport { Pyramid } from \"components/Shapes/Pyramid\";\r\nimport { Sphere } from \"components/Shapes/Sphere\";\r\nimport { OutsideShape, OutsideShapeCalls, VeritySide } from \"types/verity\";\r\nimport { getAvailableShapes, getOutsideShapesLeft } from \"util/formatters\";\r\n\r\nconst nonSquaredOutsideShapes: OutsideShape[] = [\"cone\", \"cylinder\", \"prism\"];\r\n\r\nconst squaredOutsideShapes: OutsideShape[] = [\"cube\", \"pyramid\", \"sphere\"];\r\n\r\nconst shapes: { [key in OutsideShape]: JSX.Element } = {\r\n  cone: <Cone />,\r\n  cylinder: <Cylinder />,\r\n  prism: <Prism />,\r\n  cube: <Cube />,\r\n  pyramid: <Pyramid />,\r\n  sphere: <Sphere />,\r\n};\r\n\r\nconst OutsideCallouts = ({\r\n  side,\r\n  selectedShapes,\r\n  handleOutsideShapeChange,\r\n}: {\r\n  side: VeritySide;\r\n  selectedShapes: OutsideShapeCalls;\r\n  handleOutsideShapeChange: (side: VeritySide, shape: OutsideShape) => void;\r\n}) => {\r\n  const checkDisabledButton = (shape: OutsideShape) => {\r\n    const available2dShapes = getAvailableShapes(selectedShapes);\r\n    const available3dShapes = getOutsideShapesLeft(available2dShapes);\r\n\r\n    // Selected shape for the current Guardian call.\r\n    const selectedShape = selectedShapes[\r\n      side as keyof typeof selectedShapes\r\n    ] as OutsideShape;\r\n\r\n    // Don't disable any buttons of the first selection.\r\n    if (\r\n      selectedShape !== null &&\r\n      Object.values(selectedShapes).filter((x) => x !== null).length === 1\r\n    ) {\r\n      return false;\r\n    }\r\n\r\n    if (selectedShape === shape) {\r\n      return false;\r\n    }\r\n\r\n    return !available3dShapes.includes(shape);\r\n  };\r\n\r\n  return (\r\n    <div className=\"flex flex-col gap-2 py-2\">\r\n      <div className=\"flex items-center gap-2 justify-center\">\r\n        {nonSquaredOutsideShapes.map((shape) => (\r\n          <button\r\n            className={\r\n              \"w-16 btn\" +\r\n              (selectedShapes[side as keyof typeof selectedShapes] === shape\r\n                ? \" btn-accent\"\r\n                : \"\")\r\n            }\r\n            onClick={() => {\r\n              handleOutsideShapeChange(side, shape);\r\n            }}\r\n            disabled={checkDisabledButton(shape)}\r\n            key={shape}\r\n          >\r\n            {shapes[shape as keyof typeof shapes]}\r\n          </button>\r\n        ))}\r\n      </div>\r\n      <div className=\"flex items-center gap-2 justify-center\">\r\n        {squaredOutsideShapes.map((shape) => (\r\n          <button\r\n            className={\r\n              \"w-16 btn\" +\r\n              (selectedShapes[side as keyof typeof selectedShapes] === shape\r\n                ? \" btn-accent\"\r\n                : \"\")\r\n            }\r\n            onClick={() => {\r\n              handleOutsideShapeChange(side, shape);\r\n            }}\r\n            disabled={checkDisabledButton(shape)}\r\n            key={shape}\r\n          >\r\n            {shapes[shape as keyof typeof shapes]}\r\n          </button>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default OutsideCallouts;\r\n","import { InsideCallouts } from \"components/InsideCallouts\";\r\nimport { OutsideCallouts } from \"components/OutsideCallouts\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { Alert } from \"types/util\";\r\nimport {\r\n  Dissection,\r\n  InsideShape,\r\n  InsideShapeCalls,\r\n  OutsideShape,\r\n  OutsideShapeCalls,\r\n  VerityResult,\r\n  VeritySide,\r\n} from \"types/verity\";\r\nimport {\r\n  createCommaSeparatedString,\r\n  insideShapeToNeededShapes,\r\n  shape2dTo3d,\r\n  shape3dTo2d,\r\n} from \"util/formatters\";\r\nimport { Cone } from \"components/Shapes/Cone\";\r\nimport { Cube } from \"components/Shapes/Cube\";\r\nimport { Cylinder } from \"components/Shapes/Cylinder\";\r\nimport { Prism } from \"components/Shapes/Prism\";\r\nimport { Pyramid } from \"components/Shapes/Pyramid\";\r\nimport { Sphere } from \"components/Shapes/Sphere\";\r\nimport { Circle } from \"components/Shapes/Circle\";\r\nimport { Square } from \"components/Shapes/Square\";\r\nimport { Triangle } from \"components/Shapes/Triangle\";\r\n\r\nconst outsideShapeElements: { [key in OutsideShape]: JSX.Element } = {\r\n  cone: <Cone />,\r\n  cylinder: <Cylinder />,\r\n  prism: <Prism />,\r\n  cube: <Cube />,\r\n  pyramid: <Pyramid />,\r\n  sphere: <Sphere />,\r\n};\r\n\r\nconst insideShapeElements: { [key in InsideShape]: JSX.Element } = {\r\n  circle: <Circle />,\r\n  square: <Square />,\r\n  triangle: <Triangle />,\r\n};\r\n\r\nconst VerityCalculator: React.FC = () => {\r\n  const [alert, setAlert] = useState<Alert>({\r\n    alertType: \"alert\",\r\n    message: \"\",\r\n  });\r\n\r\n  const [insideShapes, setInsideShapes] = useState<InsideShapeCalls>({\r\n    left: null,\r\n    middle: null,\r\n    right: null,\r\n  });\r\n  const [outsideShapes, setOutsideShapes] = useState<OutsideShapeCalls>({\r\n    left: null,\r\n    middle: null,\r\n    right: null,\r\n  });\r\n\r\n  const [dissections, setDissections] = useState<Dissection[]>([]);\r\n\r\n  const [checks, setChecks] = useState<OutsideShapeCalls[]>();\r\n\r\n  const handleInsideShapeChange = (side: VeritySide, shape: InsideShape) => {\r\n    const newShapes = { ...insideShapes };\r\n    switch (side) {\r\n      case \"left\": {\r\n        if (newShapes.left === shape) newShapes.left = null;\r\n        else newShapes.left = shape;\r\n\r\n        break;\r\n      }\r\n      case \"middle\": {\r\n        if (newShapes.middle === shape) newShapes.middle = null;\r\n        else newShapes.middle = shape;\r\n        break;\r\n      }\r\n      case \"right\": {\r\n        if (newShapes.right === shape) newShapes.right = null;\r\n        else newShapes.right = shape;\r\n        break;\r\n      }\r\n    }\r\n    console.log(Object.values(newShapes));\r\n    setInsideShapes(newShapes);\r\n  };\r\n\r\n  const handleOutsideShapeChange = (side: VeritySide, shape: OutsideShape) => {\r\n    const newShapes = { ...outsideShapes };\r\n    switch (side) {\r\n      case \"left\": {\r\n        if (newShapes.left === shape) newShapes.left = null;\r\n        else newShapes.left = shape;\r\n\r\n        break;\r\n      }\r\n      case \"middle\": {\r\n        if (newShapes.middle === shape) newShapes.middle = null;\r\n        else newShapes.middle = shape;\r\n        break;\r\n      }\r\n      case \"right\": {\r\n        if (newShapes.right === shape) newShapes.right = null;\r\n        else newShapes.right = shape;\r\n        break;\r\n      }\r\n    }\r\n    console.log(Object.values(newShapes));\r\n    setOutsideShapes(newShapes);\r\n  };\r\n\r\n  const findDissections = () => {\r\n    setAlert({\r\n      alertType: \"alert\",\r\n      message: \"\",\r\n    });\r\n    const inputsMissing = [];\r\n\r\n    if (insideShapes.left === null) {\r\n      inputsMissing.push(\"Inside Left\");\r\n    }\r\n\r\n    if (insideShapes.middle === null) {\r\n      inputsMissing.push(\"Inside Middle\");\r\n    }\r\n\r\n    if (insideShapes.right === null) {\r\n      inputsMissing.push(\"Inside Right\");\r\n    }\r\n\r\n    if (outsideShapes.left === null) {\r\n      inputsMissing.push(\"Outside Left\");\r\n    }\r\n\r\n    if (outsideShapes.middle === null) {\r\n      inputsMissing.push(\"Outside Middle\");\r\n    }\r\n\r\n    if (outsideShapes.right === null) {\r\n      inputsMissing.push(\"Outside Right\");\r\n    }\r\n\r\n    if (inputsMissing.length > 0) {\r\n      setAlert({\r\n        alertType: \"alert-error\",\r\n        message: `Missing Inputs: ${createCommaSeparatedString(inputsMissing)}`,\r\n      });\r\n      console.log(inputsMissing);\r\n\r\n      return;\r\n    }\r\n\r\n    const currentShapes: VerityResult = {\r\n      left: [...shape3dTo2d[outsideShapes.left as OutsideShape]],\r\n      middle: [...shape3dTo2d[outsideShapes.middle as OutsideShape]],\r\n      right: [...shape3dTo2d[outsideShapes.right as OutsideShape]],\r\n    };\r\n\r\n    const neededShapes: VerityResult = {\r\n      left: insideShapeToNeededShapes[insideShapes.left as InsideShape],\r\n      middle: insideShapeToNeededShapes[insideShapes.middle as InsideShape],\r\n      right: insideShapeToNeededShapes[insideShapes.right as InsideShape],\r\n    };\r\n\r\n    const newChecks = [];\r\n\r\n    console.log(neededShapes);\r\n\r\n    const newDissections: Dissection[] = [];\r\n\r\n    const keys = Object.keys(currentShapes);\r\n\r\n    // Loop all sides.\r\n    for (let side of keys) {\r\n      // Iterate through our needed shapes.\r\n      for (let index in neededShapes[side as keyof typeof neededShapes]) {\r\n        const neededShape =\r\n          neededShapes[side as keyof typeof neededShapes][index];\r\n\r\n        // We have all of that shape we need.\r\n        if (\r\n          currentShapes[side as keyof typeof currentShapes].filter(\r\n            (x) => x === neededShape\r\n          ).length ===\r\n          neededShapes[side as keyof typeof neededShapes].filter(\r\n            (x) => x === neededShape\r\n          ).length\r\n        ) {\r\n          continue;\r\n        }\r\n\r\n        // Find a side that has the shape we need.\r\n        for (let findSide of keys) {\r\n          // Ignore our current side.\r\n          if (side === findSide) {\r\n            continue;\r\n          }\r\n\r\n          // The side we're on has the shape we need, and it doesn't need that shape.\r\n          if (\r\n            (currentShapes[findSide as keyof typeof currentShapes].includes(\r\n              neededShape\r\n            ) &&\r\n              !neededShapes[findSide as keyof typeof neededShapes].includes(\r\n                neededShape\r\n              )) ||\r\n            currentShapes[findSide as keyof typeof currentShapes].filter(\r\n              (x) => x === neededShape\r\n            ).length > 1\r\n          ) {\r\n            // Find a shape that side doesn't need.\r\n            const shapeToGive = currentShapes[\r\n              side as keyof typeof currentShapes\r\n            ].find(\r\n              (x) =>\r\n                !neededShapes[side as keyof typeof neededShapes].includes(x)\r\n            ) as InsideShape;\r\n\r\n            if (!shapeToGive) {\r\n              continue;\r\n            }\r\n\r\n            newDissections.push({\r\n              side: side as VeritySide,\r\n              shape: shapeToGive,\r\n            });\r\n            newDissections.push({\r\n              side: findSide as VeritySide,\r\n              shape: neededShape,\r\n            });\r\n\r\n            currentShapes[side as keyof typeof currentShapes][index] =\r\n              neededShape;\r\n\r\n            currentShapes[findSide as keyof typeof currentShapes][\r\n              currentShapes[findSide as keyof typeof currentShapes].indexOf(\r\n                neededShape\r\n              )\r\n            ] = shapeToGive;\r\n\r\n            newChecks.push({\r\n              left: shape2dTo3d(currentShapes.left),\r\n              middle: shape2dTo3d(currentShapes.middle),\r\n              right: shape2dTo3d(currentShapes.right),\r\n            });\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    console.log(newChecks);\r\n    setChecks(newChecks);\r\n\r\n    setDissections(newDissections);\r\n  };\r\n\r\n  useEffect(() => {}, []);\r\n\r\n  return (\r\n    <div className=\"flex w-full flex-col items-center gap-2\">\r\n      <p className=\"font-bold text-3xl font-display tracking-tighter text-accent\">\r\n        Verity Calculator\r\n      </p>\r\n      <p className=\"text-xl font-semibold text-primary\">Inside / Solo</p>\r\n\r\n      <div className=\"flex\">\r\n        <div className=\"flex flex-col items-center\">\r\n          <p className=\"\">Left</p>\r\n          <InsideCallouts\r\n            side={\"left\"}\r\n            selectedShapes={insideShapes}\r\n            handleInsideShapeChange={handleInsideShapeChange}\r\n          />\r\n        </div>\r\n        <div className=\"divider divider-horizontal\" />\r\n        <div className=\"flex flex-col items-center\">\r\n          <p className=\"\">Middle</p>\r\n          <InsideCallouts\r\n            side={\"middle\"}\r\n            selectedShapes={insideShapes}\r\n            handleInsideShapeChange={handleInsideShapeChange}\r\n          />\r\n        </div>\r\n        <div className=\"divider divider-horizontal\" />\r\n        <div className=\"flex flex-col items-center\">\r\n          <p className=\"\">Right</p>\r\n          <InsideCallouts\r\n            side={\"right\"}\r\n            selectedShapes={insideShapes}\r\n            handleInsideShapeChange={handleInsideShapeChange}\r\n          />\r\n        </div>\r\n      </div>\r\n      <p className=\"text-xl font-semibold text-primary\">Outside / Team</p>\r\n      <div className=\"flex\">\r\n        <div className=\"flex gap-4\">\r\n          <div className=\"flex flex-col items-center\">\r\n            <OutsideCallouts\r\n              side={\"left\"}\r\n              selectedShapes={outsideShapes}\r\n              handleOutsideShapeChange={handleOutsideShapeChange}\r\n            />\r\n          </div>\r\n        </div>\r\n        <div className=\"divider divider-horizontal\" />\r\n        <div className=\"flex gap-4\">\r\n          <div className=\"flex flex-col items-center\">\r\n            <OutsideCallouts\r\n              side={\"middle\"}\r\n              selectedShapes={outsideShapes}\r\n              handleOutsideShapeChange={handleOutsideShapeChange}\r\n            />\r\n          </div>\r\n        </div>\r\n        <div className=\"divider divider-horizontal\" />\r\n        <div className=\"flex gap-4\">\r\n          <div className=\"flex flex-col items-center\">\r\n            <OutsideCallouts\r\n              side={\"right\"}\r\n              selectedShapes={outsideShapes}\r\n              handleOutsideShapeChange={handleOutsideShapeChange}\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n      {alert.message.length > 0 ? (\r\n        <div role=\"alert\" className={\"alert w-2/3 \" + alert.alertType}>\r\n          <svg\r\n            xmlns=\"http://www.w3.org/2000/svg\"\r\n            className=\"stroke-current shrink-0 h-6 w-6\"\r\n            fill=\"none\"\r\n            viewBox=\"0 0 24 24\"\r\n          >\r\n            <path\r\n              strokeLinecap=\"round\"\r\n              strokeLinejoin=\"round\"\r\n              strokeWidth=\"2\"\r\n              d=\"M10 14l2-2m0 0l2-2m-2 2l-2-2m2 2l2 2m7-2a9 9 0 11-18 0 9 9 0 0118 0z\"\r\n            />\r\n          </svg>\r\n          <span>{alert.message}</span>\r\n        </div>\r\n      ) : (\r\n        <></>\r\n      )}\r\n      <div className=\"flex gap-4 p-2\">\r\n        <button\r\n          className={\"btn btn-success\"}\r\n          onClick={() => {\r\n            findDissections();\r\n          }}\r\n        >\r\n          Find Dissections\r\n        </button>\r\n        <button\r\n          className={\"btn btn-outline btn-error\"}\r\n          onClick={() => {\r\n            setInsideShapes({ left: null, middle: null, right: null });\r\n            setOutsideShapes({ left: null, middle: null, right: null });\r\n            setAlert({\r\n              alertType: \"alert\",\r\n              message: \"\",\r\n            });\r\n          }}\r\n        >\r\n          Reset\r\n        </button>\r\n      </div>\r\n\r\n      <div className=\"flex flex-col items-center w-full\">\r\n        {dissections.length ? (\r\n          <p className=\"text-xl font-semibold text-primary pb-4\">Dissections</p>\r\n        ) : (\r\n          <p className=\"text-xl font-semibold text-primary\">\r\n            Set your shapes and click \"Find Dissections\"!\r\n          </p>\r\n        )}\r\n        {checks?.map((check, index) => (\r\n          <div key={index} className=\"flex flex-col items-center gap-1 w-1/2\">\r\n            <div className=\"flex gap-4 text-accent\">\r\n              {dissections\r\n                .slice(index * 2, (index + 1) * 2)\r\n                .map((d, dIndex) => (\r\n                  <p\r\n                    key={dIndex}\r\n                    className=\"flex flex-col items-center text-lg\"\r\n                  >\r\n                    {d.side.toLocaleUpperCase()}\r\n                    {insideShapeElements[d.shape]}\r\n                  </p>\r\n                ))}\r\n            </div>\r\n            <p className=\"font-medium pt-2 text-primary\">\r\n              Double check your work:\r\n            </p>\r\n            <div className=\"flex gap-4 items-center\">\r\n              <div className=\"flex flex-col text-accent\">\r\n                {outsideShapeElements[check.left as OutsideShape]}\r\n              </div>\r\n              <div className=\"divider divider-horizontal\" />\r\n              <div className=\"flex flex-col text-accent\">\r\n                {outsideShapeElements[check.middle as OutsideShape]}\r\n              </div>\r\n              <div className=\"divider divider-horizontal\" />\r\n              <div className=\"flex flex-col text-accent\">\r\n                {outsideShapeElements[check.right as OutsideShape]}\r\n              </div>\r\n            </div>\r\n            <div className=\"divider\" />\r\n          </div>\r\n        ))}\r\n      </div>\r\n\r\n      <div className=\"divider font-display\" />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default VerityCalculator;\r\n","import VerityCalculator from \"./VerityCalculator\";\r\nexport default VerityCalculator;\r\n","import {\r\n  Dissection,\r\n  InsideShape,\r\n  OutsideShape,\r\n  OutsideShapeCalls,\r\n  VerityResult,\r\n  VeritySide,\r\n} from \"types/verity\";\r\n\r\nconst sides: VeritySide[] = [\"left\", \"middle\", \"right\"];\r\n\r\nexport const createCommaSeparatedString = (arr: string[]): string => {\r\n  if (arr.length === 0) return \"\";\r\n  if (arr.length === 1) return arr[0];\r\n  if (arr.length === 2) return `${arr[0]} and ${arr[1]}`;\r\n\r\n  const allButLast = arr.slice(0, -1).join(\", \");\r\n  const lastItem = arr[arr.length - 1];\r\n\r\n  return `${allButLast}, and ${lastItem}`;\r\n};\r\n\r\nexport const shape3dTo2d: { [key in OutsideShape]: InsideShape[] } = {\r\n  cone: [\"circle\", \"triangle\"],\r\n  cube: [\"square\", \"square\"],\r\n  cylinder: [\"circle\", \"square\"],\r\n  prism: [\"triangle\", \"square\"],\r\n  pyramid: [\"triangle\", \"triangle\"],\r\n  sphere: [\"circle\", \"circle\"],\r\n};\r\n\r\nexport const shape2dTo3d = (\r\n  insideShapes: InsideShape[]\r\n): OutsideShape | null => {\r\n  for (const [outsideShape, mappedInsideShapes] of Object.entries(\r\n    shape3dTo2d\r\n  )) {\r\n    if (\r\n      JSON.stringify(mappedInsideShapes.sort()) ===\r\n      JSON.stringify(insideShapes.sort())\r\n    ) {\r\n      return outsideShape as OutsideShape;\r\n    }\r\n  }\r\n  return null; // Return null if no matching OutsideShape is found\r\n};\r\n\r\nexport const insideShapeToNeededShapes: {\r\n  [key in InsideShape]: InsideShape[];\r\n} = {\r\n  circle: [\"triangle\", \"square\"],\r\n  square: [\"circle\", \"triangle\"],\r\n  triangle: [\"circle\", \"square\"],\r\n};\r\n\r\nexport const getAvailableShapes = (\r\n  outsideShapes: OutsideShapeCalls\r\n): InsideShape[] => {\r\n  const availableShapes: InsideShape[] = [\r\n    \"circle\",\r\n    \"circle\",\r\n    \"triangle\",\r\n    \"triangle\",\r\n    \"square\",\r\n    \"square\",\r\n  ];\r\n  for (const call of Object.values(outsideShapes)) {\r\n    if (call === null) {\r\n      continue;\r\n    }\r\n    for (const add of shape3dTo2d[call as keyof typeof shape3dTo2d]) {\r\n      availableShapes.splice(availableShapes.indexOf(add), 1);\r\n    }\r\n  }\r\n  return availableShapes;\r\n};\r\n\r\nexport const getOutsideShapesLeft = (\r\n  insideShapes: InsideShape[]\r\n): OutsideShape[] => {\r\n  const shapeCounts = insideShapes.reduce((counts, shape) => {\r\n    counts[shape] = ((counts[shape] || 0) as number) + 1;\r\n    return counts;\r\n  }, {} as { [key in InsideShape]?: number });\r\n  const possibleShapes: OutsideShape[] = [];\r\n  if (shapeCounts.circle === 2) possibleShapes.push(\"sphere\");\r\n  if (shapeCounts.square === 2) possibleShapes.push(\"cube\");\r\n  if (shapeCounts.triangle === 2) possibleShapes.push(\"pyramid\");\r\n  if (shapeCounts.circle && shapeCounts.triangle) possibleShapes.push(\"cone\");\r\n  if (shapeCounts.circle && shapeCounts.square) possibleShapes.push(\"cylinder\");\r\n  if (shapeCounts.triangle && shapeCounts.square) possibleShapes.push(\"prism\");\r\n\r\n  return possibleShapes;\r\n};\r\n\r\nexport const replaceNonEnglish = (str: string) => {\r\n  return str\r\n    .replace(\"ê\", \"e\")\r\n    .replace(\"à\", \"a\")\r\n    .replace(\"È\", \"E\")\r\n    .replace(\"ö\", \"o\")\r\n    .replace(\"…\", \"...\");\r\n};\r\n"],"names":["Circle","_jsx","xmlns","version","viewBox","className","fill","children","d","Square","Triangle","insideShapes","shapes","circle","square","triangle","_ref","side","selectedShapes","handleInsideShapeChange","map","shape","onClick","disabled","Object","values","includes","Cone","Cube","_jsxs","fillRule","Cylinder","Prism","Pyramid","Sphere","nonSquaredOutsideShapes","squaredOutsideShapes","cone","cylinder","prism","cube","pyramid","sphere","handleOutsideShapeChange","checkDisabledButton","available2dShapes","getAvailableShapes","available3dShapes","getOutsideShapesLeft","selectedShape","filter","x","length","outsideShapeElements","insideShapeElements","VerityCalculator","alert","setAlert","useState","alertType","message","setInsideShapes","left","middle","right","outsideShapes","setOutsideShapes","dissections","setDissections","checks","setChecks","newShapes","console","log","useEffect","InsideCallouts","OutsideCallouts","role","strokeLinecap","strokeLinejoin","strokeWidth","_Fragment","findDissections","inputsMissing","push","concat","createCommaSeparatedString","currentShapes","shape3dTo2d","neededShapes","insideShapeToNeededShapes","newChecks","newDissections","keys","index","neededShape","findSide","shapeToGive","find","indexOf","shape2dTo3d","check","slice","dIndex","toLocaleUpperCase","arr","allButLast","join","lastItem","outsideShape","mappedInsideShapes","entries","JSON","stringify","sort","availableShapes","call","add","splice","shapeCounts","reduce","counts","possibleShapes","replaceNonEnglish","str","replace"],"sourceRoot":""}