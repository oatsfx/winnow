{"version":3,"file":"static/js/432.d02083c4.chunk.js","mappings":"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","sources":["components/Shapes/Circle/Circle.tsx","components/Shapes/Square/Square.tsx","components/Shapes/Triangle/Triangle.tsx","components/InsideCallouts/InsideCallouts.tsx","components/Shapes/Cone/Cone.tsx","components/Shapes/Cube/Cube.tsx","components/Shapes/Cylinder/Cylinder.tsx","components/Shapes/Prism/Prism.tsx","components/Shapes/Pyramid/Pyramid.tsx","components/Shapes/Sphere/Sphere.tsx","components/OutsideCallouts/OutsideCallouts.tsx","pages/VerityCallouts/VerityCallouts.tsx","pages/VerityCallouts/index.tsx","util/formatters.ts"],"sourcesContent":["const Circle = () => {\r\n  return (\r\n    <svg\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      version=\"1.1\"\r\n      viewBox=\"0 0 106.54 106.54\"\r\n      className=\"w-6 fill-primary\"\r\n    >\r\n      <path d=\"M53.27,8c24.96,0,45.27,20.31,45.27,45.27s-20.31,45.27-45.27,45.27S8,78.23,8,53.27,28.31,8,53.27,8M53.27,0C23.85,0,0,23.85,0,53.27s23.85,53.27,53.27,53.27,53.27-23.85,53.27-53.27S82.69,0,53.27,0h0Z\" />\r\n    </svg>\r\n  );\r\n};\r\n\r\nexport default Circle;\r\n","const Square = () => {\r\n  return (\r\n    <svg\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      version=\"1.1\"\r\n      viewBox=\"0 0 106.69 106.69\"\r\n      className=\"w-6 fill-primary\"\r\n    >\r\n      <path d=\"M0,0v106.69h106.69V0H0ZM99.44,99.44H7.24V7.24h92.2v92.2Z\" />\r\n    </svg>\r\n  );\r\n};\r\n\r\nexport default Square;\r\n","const Triangle = () => {\r\n  return (\r\n    <svg\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      version=\"1.1\"\r\n      viewBox=\"0 0 105.64 91.48\"\r\n      className=\"w-6 fill-primary\"\r\n    >\r\n      <path d=\"M52.82,16l38.96,67.48H13.86S52.82,16,52.82,16M52.82,0L0,91.48h105.64S52.82,0,52.82,0h0Z\" />\r\n    </svg>\r\n  );\r\n};\r\n\r\nexport default Triangle;\r\n","import { Circle } from \"components/Shapes/Circle\";\r\nimport { Square } from \"components/Shapes/Square\";\r\nimport { Triangle } from \"components/Shapes/Triangle\";\r\nimport { InsideShape, InsideShapeCalls, VeritySide } from \"types/verity\";\r\n\r\nconst insideShapes: InsideShape[] = [\"square\", \"triangle\", \"circle\"];\r\n\r\nconst shapes: { [key in InsideShape]: JSX.Element } = {\r\n  circle: <Circle />,\r\n  square: <Square />,\r\n  triangle: <Triangle />,\r\n};\r\n\r\nconst InsideCallouts = ({\r\n  side,\r\n  selectedShapes,\r\n  handleInsideShapeChange,\r\n}: {\r\n  side: VeritySide;\r\n  selectedShapes: InsideShapeCalls;\r\n  handleInsideShapeChange: (side: VeritySide, shape: InsideShape) => void;\r\n}) => {\r\n  return (\r\n    <div className=\"flex flex-col gap-2 py-2\">\r\n      <div className=\"flex items-center gap-2 justify-center\">\r\n        {insideShapes.map((shape) => (\r\n          <button\r\n            className={\r\n              \"w-16 btn\" +\r\n              (selectedShapes[side as keyof typeof selectedShapes] === shape\r\n                ? \" btn-info\"\r\n                : \"\")\r\n            }\r\n            onClick={() => {\r\n              handleInsideShapeChange(side, shape);\r\n            }}\r\n            disabled={\r\n              Object.values(selectedShapes).includes(\r\n                shape\r\n              ) /* Selected shapes has the button's shape */ &&\r\n              selectedShapes[side as keyof typeof selectedShapes] !==\r\n                shape /* Selected shape isn't the button */\r\n            }\r\n            key={shape}\r\n          >\r\n            {shapes[shape as keyof typeof shapes]}\r\n          </button>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default InsideCallouts;\r\n","const Cone = () => {\r\n  return (\r\n    <svg\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      version=\"1.1\"\r\n      viewBox=\"0 0 98.24 120.7\"\r\n      className=\"w-6 fill-primary\"\r\n    >\r\n      <path d=\"M58.07,5.76s-.04-.08-.05-.12c-1.64-3.48-5.04-5.64-8.89-5.64s-7.25,2.16-8.95,5.76L.35,97.98c-.23.53-.35,1.09-.35,1.67,0,13.82,24.71,21.05,49.12,21.05s49.12-7.23,49.12-21.05c0-.57-.12-1.14-.35-1.67L58.07,5.76ZM49.13,112.28c-23.42,0-39.29-6.96-40.62-11.97L47.85,9.23c.65-1.39,1.85-1.38,2.52-.04l39.36,91.13c-1.33,5.01-17.2,11.97-40.62,11.97h0Z\" />\r\n    </svg>\r\n  );\r\n};\r\n\r\nexport default Cone;\r\n","const Cube = () => {\r\n  return (\r\n    <svg\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      version=\"1.1\"\r\n      viewBox=\"0 0 110 135\"\r\n      fillRule=\"evenodd\"\r\n      className=\"w-6 fill-primary\"\r\n    >\r\n      <path d=\"M100,37.4L58,13.2c-1.8-1.1-4.1-1.1-5.9,0L10,37.4c-1.8,1.1-3,3-3,5.1v48.5c0,2.1,1.1,4.1,3,5.1l42,24.3c1.8,1.1,4.1,1.1,5.9,0l42-24.3c1.8-1.1,3-3,3-5.1v-48.5c0-2.1-1.1-4.1-3-5.1ZM60.9,8c-3.7-2.1-8.2-2.1-11.8,0L7.1,32.3c-3.7,2.1-5.9,6-5.9,10.3v48.5c0,4.2,2.3,8.1,5.9,10.3l42,24.3c3.7,2.1,8.2,2.1,11.8,0l42-24.3c3.7-2.1,5.9-6,5.9-10.3v-48.5c0-4.2-2.3-8.1-5.9-10.3L60.9,8Z\" />\r\n      <path d=\"M5,38.7c.8-1.4,2.6-1.9,4-1.1l47.4,26.7c1.4.8,1.9,2.6,1.1,4-.8,1.4-2.6,1.9-4,1.1L6.2,42.7c-1.4-.8-1.9-2.6-1.1-4h0Z\" />\r\n      <path d=\"M55,63.8c1.6,0,3,1.3,3,3v56.3c0,1.6-1.3,3-3,3s-3-1.3-3-3v-56.3c0-1.6,1.3-3,3-3Z\" />\r\n      <path d=\"M105,38.7c.8,1.4.3,3.2-1.1,4l-47.4,26.7c-1.4.8-3.2.3-4-1.1-.8-1.4-.3-3.2,1.1-4l47.4-26.7c1.4-.8,3.2-.3,4,1.1h0Z\" />\r\n    </svg>\r\n  );\r\n};\r\n\r\nexport default Cube;\r\n","const Cylinder = () => {\r\n  return (\r\n    <svg\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      version=\"1.1\"\r\n      viewBox=\"0 0 72.42 120.7\"\r\n      className=\"w-5 fill-primary\"\r\n    >\r\n      <path d=\"M36.21,0C15.57,0,0,8.65,0,20.12v80.47c0,11.47,15.57,20.12,36.21,20.12s36.21-8.65,36.21-20.12V20.12C72.42,8.65,56.86,0,36.21,0ZM36.21,8.05c16.12,0,28.16,6.37,28.16,12.07s-12.05,12.07-28.16,12.07-28.16-6.37-28.16-12.07,12.05-12.07,28.16-12.07ZM36.21,112.66c-16.12,0-28.16-6.37-28.16-12.07V33.05c8.5,5.06,18.28,7.56,28.16,7.18,9.88.38,19.66-2.12,28.16-7.18v67.53c0,5.7-12.05,12.07-28.16,12.07Z\" />\r\n    </svg>\r\n  );\r\n};\r\n\r\nexport default Cylinder;\r\n","const Prism = () => {\r\n  return (\r\n    <svg\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      version=\"1.1\"\r\n      viewBox=\"0 0 110 135\"\r\n      fillRule=\"evenodd\"\r\n      className=\"w-7 fill-primary\"\r\n    >\r\n      <g>\r\n        <path d=\"M86.9,104.2l-26.5,21.9c-3.1,2.6-7.7,2.6-10.8,0l-26.5-21.9c-2-1.6-3.1-4-3.1-6.5V15.4c0-4.7,3.8-8.5,8.5-8.5h53c4.7,0,8.5,3.8,8.5,8.5v82.2c0,2.5-1.1,4.9-3.1,6.5ZM55,32.8l24-20.2H30.7l24.3,20.2ZM25.7,16.1v79c0,2.5,1.1,4.9,3.1,6.5,7.7,6.5,15.5,13.1,23.2,19.5V37.8l-26.3-21.7ZM57.7,37.8v83.3l23.6-19.5c1.9-1.6,3.1-4,3.1-6.5V16.1l-26.6,21.7Z\" />\r\n      </g>\r\n    </svg>\r\n  );\r\n};\r\n\r\nexport default Prism;\r\n","const Pyramid = () => {\r\n  return (\r\n    <svg\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      version=\"1.1\"\r\n      viewBox=\"0 0 107.67 103.56\"\r\n      fillRule=\"evenodd\"\r\n      className=\"w-7 fill-primary\"\r\n    >\r\n      <path d=\"M56.96,1.54c-.75-.98-1.91-1.54-3.14-1.54s-2.39.57-3.14,1.54L.83,66.15c-.69.88-.96,2.02-.77,3.13.2,1.1.86,2.07,1.81,2.65l49.87,31.04c.65.4,1.37.59,2.1.59s1.45-.2,2.1-.59l49.87-31.04c.95-.59,1.61-1.56,1.81-2.65.2-1.1-.08-2.23-.77-3.13L56.96,1.54ZM49.88,15.57v76.92l-40.1-24.97L49.88,15.57ZM57.8,92.48V15.57l40.1,51.95-40.1,24.95Z\" />\r\n    </svg>\r\n  );\r\n};\r\n\r\nexport default Pyramid;\r\n","const Sphere = () => {\r\n  return (\r\n    <svg\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      version=\"1.1\"\r\n      viewBox=\"0 0 106.78 106.78\"\r\n      fillRule=\"evenodd\"\r\n      className=\"w-7 fill-primary\"\r\n    >\r\n      <path d=\"M53.39,0C23.94,0,0,23.94,0,53.39s23.94,53.39,53.39,53.39,53.39-23.94,53.39-53.39S82.84,0,53.39,0ZM53.39,4.72c26.86,0,48.67,21.81,48.67,48.67-.11,3.71-16.75,10.68-48.67,10.68S4.83,57.1,4.72,53.39c0-26.86,21.81-48.67,48.67-48.67ZM53.39,102.06c-24.39,0-44.62-18.1-48.11-41.48,9.1,5.51,28.66,8.32,48.11,8.32s39-2.81,48.11-8.32c-3.48,23.38-23.72,41.48-48.11,41.48Z\" />\r\n      <path d=\"M73.62,43.72c2.02.22,4.05.45,5.84.79h.34c1.12,0,2.14-.79,2.36-2.02.22-1.35-.67-2.47-2.02-2.7-1.91-.34-4.05-.56-6.07-.79-1.35-.11-2.47.79-2.59,2.14-.11,1.35.79,2.47,2.14,2.59Z\" />\r\n      <path d=\"M58.11,42.71c2.02,0,4.05.11,5.96.22h.11c1.24,0,2.36-1.01,2.36-2.25.11-1.35-.9-2.47-2.25-2.47-2.02-.11-4.05-.22-6.07-.22-1.35,0-2.36,1.01-2.47,2.36,0,1.24,1.12,2.36,2.36,2.36Z\" />\r\n      <path d=\"M88.68,46.42c2.02.56,3.93,1.12,5.51,1.69.22.11.56.11.79.11,1.01,0,1.91-.56,2.25-1.57.45-1.24-.22-2.59-1.46-3.03-1.8-.67-3.82-1.24-5.96-1.8-1.24-.34-2.59.45-2.92,1.69-.22,1.24.56,2.59,1.8,2.92Z\" />\r\n      <path d=\"M11.69,48.22c.22,0,.56,0,.79-.11,1.69-.56,3.48-1.12,5.51-1.69,1.24-.34,2.02-1.57,1.69-2.92-.34-1.24-1.57-2.02-2.92-1.69-2.14.56-4.16,1.12-5.96,1.8-1.24.45-1.91,1.8-1.46,3.03.45,1.01,1.46,1.57,2.36,1.57Z\" />\r\n      <path d=\"M42.49,42.94h.11c1.91-.11,3.93-.22,5.96-.22,1.35,0,2.36-1.12,2.36-2.47s-1.12-2.36-2.47-2.36c-2.02,0-4.05.11-6.07.22-1.35.11-2.36,1.24-2.25,2.47.11,1.46,1.12,2.36,2.36,2.36Z\" />\r\n      <path d=\"M26.98,44.62h.34c1.91-.34,3.82-.56,5.84-.79,1.35-.11,2.25-1.35,2.14-2.59-.11-1.35-1.35-2.25-2.59-2.14-2.14.22-4.16.56-6.07.79-1.35.22-2.25,1.46-2.02,2.7.11,1.12,1.12,2.02,2.36,2.02Z\" />\r\n    </svg>\r\n  );\r\n};\r\n\r\nexport default Sphere;\r\n","import { Cone } from \"components/Shapes/Cone\";\r\nimport { Cube } from \"components/Shapes/Cube\";\r\nimport { Cylinder } from \"components/Shapes/Cylinder\";\r\nimport { Prism } from \"components/Shapes/Prism\";\r\nimport { Pyramid } from \"components/Shapes/Pyramid\";\r\nimport { Sphere } from \"components/Shapes/Sphere\";\r\nimport { OutsideShape, OutsideShapeCalls, VeritySide } from \"types/verity\";\r\nimport { getAvailableShapes, getOutsideShapesLeft } from \"util/formatters\";\r\n\r\nconst nonSquaredOutsideShapes: OutsideShape[] = [\"cone\", \"cylinder\", \"prism\"];\r\n\r\nconst squaredOutsideShapes: OutsideShape[] = [\"cube\", \"pyramid\", \"sphere\"];\r\n\r\nconst shapes: { [key in OutsideShape]: JSX.Element } = {\r\n  cone: <Cone />,\r\n  cylinder: <Cylinder />,\r\n  prism: <Prism />,\r\n  cube: <Cube />,\r\n  pyramid: <Pyramid />,\r\n  sphere: <Sphere />,\r\n};\r\n\r\nconst OutsideCallouts = ({\r\n  side,\r\n  selectedShapes,\r\n  handleOutsideShapeChange,\r\n}: {\r\n  side: VeritySide;\r\n  selectedShapes: OutsideShapeCalls;\r\n  handleOutsideShapeChange: (side: VeritySide, shape: OutsideShape) => void;\r\n}) => {\r\n  const checkDisabledButton = (shape: OutsideShape) => {\r\n    const available2dShapes = getAvailableShapes(selectedShapes);\r\n    const available3dShapes = getOutsideShapesLeft(available2dShapes);\r\n\r\n    // Selected shape for the current Guardian call.\r\n    const selectedShape = selectedShapes[\r\n      side as keyof typeof selectedShapes\r\n    ] as OutsideShape;\r\n\r\n    // Don't disable any buttons of the first selection.\r\n    if (\r\n      selectedShape !== null &&\r\n      Object.values(selectedShapes).filter((x) => x !== null).length === 1\r\n    ) {\r\n      return false;\r\n    }\r\n\r\n    if (selectedShape === shape) {\r\n      return false;\r\n    }\r\n\r\n    return !available3dShapes.includes(shape);\r\n  };\r\n\r\n  return (\r\n    <div className=\"flex flex-col gap-2 py-2\">\r\n      <div className=\"flex items-center gap-2 justify-center\">\r\n        {nonSquaredOutsideShapes.map((shape) => (\r\n          <button\r\n            className={\r\n              \"w-16 btn\" +\r\n              (selectedShapes[side as keyof typeof selectedShapes] === shape\r\n                ? \" btn-info\"\r\n                : \"\")\r\n            }\r\n            onClick={() => {\r\n              handleOutsideShapeChange(side, shape);\r\n            }}\r\n            disabled={checkDisabledButton(shape)}\r\n            key={shape}\r\n          >\r\n            {shapes[shape as keyof typeof shapes]}\r\n          </button>\r\n        ))}\r\n      </div>\r\n      <div className=\"flex items-center gap-2 justify-center\">\r\n        {squaredOutsideShapes.map((shape) => (\r\n          <button\r\n            className={\r\n              \"w-16 btn\" +\r\n              (selectedShapes[side as keyof typeof selectedShapes] === shape\r\n                ? \" btn-info\"\r\n                : \"\")\r\n            }\r\n            onClick={() => {\r\n              handleOutsideShapeChange(side, shape);\r\n            }}\r\n            disabled={checkDisabledButton(shape)}\r\n            key={shape}\r\n          >\r\n            {shapes[shape as keyof typeof shapes]}\r\n          </button>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default OutsideCallouts;\r\n","import { InsideCallouts } from \"components/InsideCallouts\";\r\nimport { OutsideCallouts } from \"components/OutsideCallouts\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { Alert } from \"types/util\";\r\nimport {\r\n  Dissection,\r\n  InsideShape,\r\n  InsideShapeCalls,\r\n  OutsideShape,\r\n  OutsideShapeCalls,\r\n  VerityResult,\r\n  VeritySide,\r\n} from \"types/verity\";\r\nimport {\r\n  createCommaSeparatedString,\r\n  insideShapeToNeededShapes,\r\n  shape2dTo3d,\r\n  shape3dTo2d,\r\n} from \"util/formatters\";\r\nimport { Cone } from \"components/Shapes/Cone\";\r\nimport { Cube } from \"components/Shapes/Cube\";\r\nimport { Cylinder } from \"components/Shapes/Cylinder\";\r\nimport { Prism } from \"components/Shapes/Prism\";\r\nimport { Pyramid } from \"components/Shapes/Pyramid\";\r\nimport { Sphere } from \"components/Shapes/Sphere\";\r\nimport { Circle } from \"components/Shapes/Circle\";\r\nimport { Square } from \"components/Shapes/Square\";\r\nimport { Triangle } from \"components/Shapes/Triangle\";\r\n\r\nconst outsideShapeElements: { [key in OutsideShape]: JSX.Element } = {\r\n  cone: <Cone />,\r\n  cylinder: <Cylinder />,\r\n  prism: <Prism />,\r\n  cube: <Cube />,\r\n  pyramid: <Pyramid />,\r\n  sphere: <Sphere />,\r\n};\r\n\r\nconst insideShapeElements: { [key in InsideShape]: JSX.Element } = {\r\n  circle: <Circle />,\r\n  square: <Square />,\r\n  triangle: <Triangle />,\r\n};\r\n\r\nconst VerityCallouts: React.FC = () => {\r\n  const [alert, setAlert] = useState<Alert>({\r\n    alertType: \"alert\",\r\n    message: \"\",\r\n  });\r\n\r\n  const [insideShapes, setInsideShapes] = useState<InsideShapeCalls>({\r\n    left: null,\r\n    middle: null,\r\n    right: null,\r\n  });\r\n  const [outsideShapes, setOutsideShapes] = useState<OutsideShapeCalls>({\r\n    left: null,\r\n    middle: null,\r\n    right: null,\r\n  });\r\n\r\n  const [dissections, setDissections] = useState<Dissection[]>([]);\r\n\r\n  const [outsideResult, setOutsideResult] = useState<OutsideShapeCalls>({\r\n    left: null,\r\n    middle: null,\r\n    right: null,\r\n  });\r\n\r\n  const [checks, setChecks] = useState<OutsideShapeCalls[]>();\r\n\r\n  const handleInsideShapeChange = (side: VeritySide, shape: InsideShape) => {\r\n    const newShapes = { ...insideShapes };\r\n    switch (side) {\r\n      case \"left\": {\r\n        if (newShapes.left === shape) newShapes.left = null;\r\n        else newShapes.left = shape;\r\n\r\n        break;\r\n      }\r\n      case \"middle\": {\r\n        if (newShapes.middle === shape) newShapes.middle = null;\r\n        else newShapes.middle = shape;\r\n        break;\r\n      }\r\n      case \"right\": {\r\n        if (newShapes.right === shape) newShapes.right = null;\r\n        else newShapes.right = shape;\r\n        break;\r\n      }\r\n    }\r\n    console.log(Object.values(newShapes));\r\n    setInsideShapes(newShapes);\r\n  };\r\n\r\n  const handleOutsideShapeChange = (side: VeritySide, shape: OutsideShape) => {\r\n    const newShapes = { ...outsideShapes };\r\n    switch (side) {\r\n      case \"left\": {\r\n        if (newShapes.left === shape) newShapes.left = null;\r\n        else newShapes.left = shape;\r\n\r\n        break;\r\n      }\r\n      case \"middle\": {\r\n        if (newShapes.middle === shape) newShapes.middle = null;\r\n        else newShapes.middle = shape;\r\n        break;\r\n      }\r\n      case \"right\": {\r\n        if (newShapes.right === shape) newShapes.right = null;\r\n        else newShapes.right = shape;\r\n        break;\r\n      }\r\n    }\r\n    console.log(Object.values(newShapes));\r\n    setOutsideShapes(newShapes);\r\n  };\r\n\r\n  const findDissections = () => {\r\n    setAlert({\r\n      alertType: \"alert\",\r\n      message: \"\",\r\n    });\r\n    const inputsMissing = [];\r\n\r\n    if (insideShapes.left === null) {\r\n      inputsMissing.push(\"Inside Left\");\r\n    }\r\n\r\n    if (insideShapes.middle === null) {\r\n      inputsMissing.push(\"Inside Middle\");\r\n    }\r\n\r\n    if (insideShapes.right === null) {\r\n      inputsMissing.push(\"Inside Right\");\r\n    }\r\n\r\n    if (outsideShapes.left === null) {\r\n      inputsMissing.push(\"Outside Left\");\r\n    }\r\n\r\n    if (outsideShapes.middle === null) {\r\n      inputsMissing.push(\"Outside Middle\");\r\n    }\r\n\r\n    if (outsideShapes.right === null) {\r\n      inputsMissing.push(\"Outside Right\");\r\n    }\r\n\r\n    if (inputsMissing.length > 0) {\r\n      setAlert({\r\n        alertType: \"alert-error\",\r\n        message: `Missing Inputs: ${createCommaSeparatedString(inputsMissing)}`,\r\n      });\r\n      console.log(inputsMissing);\r\n\r\n      return;\r\n    }\r\n\r\n    const currentShapes: VerityResult = {\r\n      left: [...shape3dTo2d[outsideShapes.left as OutsideShape]],\r\n      middle: [...shape3dTo2d[outsideShapes.middle as OutsideShape]],\r\n      right: [...shape3dTo2d[outsideShapes.right as OutsideShape]],\r\n    };\r\n\r\n    const neededShapes: VerityResult = {\r\n      left: insideShapeToNeededShapes[insideShapes.left as InsideShape],\r\n      middle: insideShapeToNeededShapes[insideShapes.middle as InsideShape],\r\n      right: insideShapeToNeededShapes[insideShapes.right as InsideShape],\r\n    };\r\n\r\n    const neededDissections: VerityResult = {\r\n      left: [],\r\n      middle: [],\r\n      right: [],\r\n    };\r\n\r\n    const removedDissections: VerityResult = {\r\n      left: [],\r\n      middle: [],\r\n      right: [],\r\n    };\r\n\r\n    const newChecks = [];\r\n\r\n    neededDissections.left.push(\r\n      ...neededShapes.left.filter(\r\n        (shape) => !currentShapes.left.includes(shape)\r\n      )\r\n    );\r\n\r\n    removedDissections.left.push(\r\n      ...currentShapes.left.filter(\r\n        (shape) => !neededShapes.left.includes(shape)\r\n      )\r\n    );\r\n\r\n    neededDissections.middle.push(\r\n      ...neededShapes.middle.filter(\r\n        (shape) => !currentShapes.middle.includes(shape)\r\n      )\r\n    );\r\n\r\n    removedDissections.middle.push(\r\n      ...currentShapes.middle.filter(\r\n        (shape) => !neededShapes.middle.includes(shape)\r\n      )\r\n    );\r\n\r\n    neededDissections.right.push(\r\n      ...neededShapes.right.filter(\r\n        (shape) => !currentShapes.right.includes(shape)\r\n      )\r\n    );\r\n\r\n    removedDissections.right.push(\r\n      ...currentShapes.right.filter(\r\n        (shape) => !neededShapes.right.includes(shape)\r\n      )\r\n    );\r\n\r\n    console.log(currentShapes);\r\n    console.log(neededShapes);\r\n    console.log(removedDissections);\r\n    console.log(neededDissections);\r\n\r\n    const newDissections: Dissection[] = [];\r\n\r\n    for (let index in removedDissections.left) {\r\n      const shape = removedDissections.left[index];\r\n      // find the spot that needs the shape\r\n      if (\r\n        neededDissections.middle.includes(shape) &&\r\n        !currentShapes.middle.includes(shape)\r\n      ) {\r\n        console.log(\r\n          `${shape} left and ${\r\n            currentShapes.middle[\r\n              currentShapes.middle.indexOf(currentShapes.middle[0])\r\n            ]\r\n          } middle`\r\n        );\r\n        newDissections.push({ side: \"left\", shape: shape });\r\n        newDissections.push({\r\n          side: \"middle\",\r\n          shape:\r\n            currentShapes.middle[\r\n              currentShapes.middle.indexOf(currentShapes.middle[0])\r\n            ],\r\n        });\r\n        currentShapes.left[currentShapes.left.indexOf(shape)] =\r\n          currentShapes.middle[\r\n            currentShapes.middle.indexOf(currentShapes.middle[0])\r\n          ];\r\n\r\n        currentShapes.middle[\r\n          currentShapes.middle.indexOf(currentShapes.middle[0])\r\n        ] = shape;\r\n        newChecks.push({\r\n          left: shape2dTo3d(currentShapes.left),\r\n          middle: shape2dTo3d(currentShapes.middle),\r\n          right: shape2dTo3d(currentShapes.right),\r\n        });\r\n      } else if (\r\n        neededDissections.right.includes(shape) &&\r\n        !currentShapes.right.includes(shape)\r\n      ) {\r\n        console.log(\r\n          `${shape} left and ${\r\n            currentShapes.right[\r\n              currentShapes.right.indexOf(currentShapes.right[0])\r\n            ]\r\n          } right`\r\n        );\r\n        newDissections.push({ side: \"left\", shape: shape });\r\n        newDissections.push({\r\n          side: \"right\",\r\n          shape:\r\n            currentShapes.right[\r\n              currentShapes.right.indexOf(currentShapes.right[0])\r\n            ],\r\n        });\r\n        currentShapes.left[currentShapes.left.indexOf(shape)] =\r\n          currentShapes.right[\r\n            currentShapes.right.indexOf(currentShapes.right[0])\r\n          ];\r\n\r\n        currentShapes.right[\r\n          currentShapes.right.indexOf(currentShapes.right[0])\r\n        ] = shape;\r\n        newChecks.push({\r\n          left: shape2dTo3d(currentShapes.left),\r\n          middle: shape2dTo3d(currentShapes.middle),\r\n          right: shape2dTo3d(currentShapes.right),\r\n        });\r\n      }\r\n    }\r\n\r\n    for (let index in removedDissections.middle) {\r\n      const shape = removedDissections.middle[index];\r\n      // find the spot that needs the shape\r\n      if (\r\n        neededDissections.left.includes(shape) &&\r\n        !currentShapes.left.includes(shape)\r\n      ) {\r\n        console.log(\r\n          `${shape} middle and ${\r\n            currentShapes.left[\r\n              currentShapes.left.indexOf(currentShapes.left[0])\r\n            ]\r\n          } left`\r\n        );\r\n        newDissections.push({ side: \"middle\", shape: shape });\r\n        newDissections.push({\r\n          side: \"left\",\r\n          shape:\r\n            currentShapes.left[\r\n              currentShapes.left.indexOf(currentShapes.left[0])\r\n            ],\r\n        });\r\n        currentShapes.middle[currentShapes.middle.indexOf(shape)] =\r\n          currentShapes.left[currentShapes.left.indexOf(currentShapes.left[0])];\r\n\r\n        currentShapes.left[currentShapes.left.indexOf(currentShapes.left[0])] =\r\n          shape;\r\n        newChecks.push({\r\n          left: shape2dTo3d(currentShapes.left),\r\n          middle: shape2dTo3d(currentShapes.middle),\r\n          right: shape2dTo3d(currentShapes.right),\r\n        });\r\n      } else if (\r\n        neededDissections.right.includes(shape) &&\r\n        !currentShapes.right.includes(shape)\r\n      ) {\r\n        console.log(\r\n          `${shape} middle and ${\r\n            currentShapes.right[\r\n              currentShapes.right.indexOf(currentShapes.right[0])\r\n            ]\r\n          } right`\r\n        );\r\n        newDissections.push({ side: \"middle\", shape: shape });\r\n        newDissections.push({\r\n          side: \"right\",\r\n          shape:\r\n            currentShapes.right[\r\n              currentShapes.right.indexOf(currentShapes.right[0])\r\n            ],\r\n        });\r\n        currentShapes.middle[currentShapes.middle.indexOf(shape)] =\r\n          currentShapes.right[\r\n            currentShapes.right.indexOf(currentShapes.right[0])\r\n          ];\r\n\r\n        currentShapes.right[\r\n          currentShapes.right.indexOf(currentShapes.right[0])\r\n        ] = shape;\r\n        newChecks.push({\r\n          left: shape2dTo3d(currentShapes.left),\r\n          middle: shape2dTo3d(currentShapes.middle),\r\n          right: shape2dTo3d(currentShapes.right),\r\n        });\r\n      }\r\n    }\r\n\r\n    for (let index in removedDissections.right) {\r\n      const shape = removedDissections.right[index];\r\n      // find the spot that needs the shape\r\n      if (\r\n        neededDissections.left.includes(shape) &&\r\n        !currentShapes.left.includes(shape)\r\n      ) {\r\n        console.log(\r\n          `${shape} right and ${\r\n            currentShapes.left[\r\n              currentShapes.left.indexOf(currentShapes.left[0])\r\n            ]\r\n          } left`\r\n        );\r\n        newDissections.push({ side: \"right\", shape: shape });\r\n        newDissections.push({\r\n          side: \"left\",\r\n          shape:\r\n            currentShapes.left[\r\n              currentShapes.left.indexOf(currentShapes.left[0])\r\n            ],\r\n        });\r\n        currentShapes.right[currentShapes.right.indexOf(shape)] =\r\n          currentShapes.left[currentShapes.left.indexOf(currentShapes.left[0])];\r\n\r\n        currentShapes.left[currentShapes.left.indexOf(currentShapes.left[0])] =\r\n          shape;\r\n        newChecks.push({\r\n          left: shape2dTo3d(currentShapes.left),\r\n          middle: shape2dTo3d(currentShapes.middle),\r\n          right: shape2dTo3d(currentShapes.right),\r\n        });\r\n      } else if (\r\n        neededDissections.middle.includes(shape) &&\r\n        !currentShapes.middle.includes(shape)\r\n      ) {\r\n        console.log(\r\n          `${shape} right and ${\r\n            currentShapes.middle[\r\n              currentShapes.middle.indexOf(currentShapes.middle[0])\r\n            ]\r\n          } middle`\r\n        );\r\n        newDissections.push({ side: \"right\", shape: shape });\r\n        newDissections.push({\r\n          side: \"middle\",\r\n          shape:\r\n            currentShapes.middle[\r\n              currentShapes.middle.indexOf(currentShapes.middle[0])\r\n            ],\r\n        });\r\n        currentShapes.right[currentShapes.right.indexOf(shape)] =\r\n          currentShapes.middle[\r\n            currentShapes.middle.indexOf(currentShapes.middle[0])\r\n          ];\r\n\r\n        currentShapes.middle[\r\n          currentShapes.middle.indexOf(currentShapes.middle[0])\r\n        ] = shape;\r\n        newChecks.push({\r\n          left: shape2dTo3d(currentShapes.left),\r\n          middle: shape2dTo3d(currentShapes.middle),\r\n          right: shape2dTo3d(currentShapes.right),\r\n        });\r\n      }\r\n    }\r\n\r\n    setOutsideResult({\r\n      left: shape2dTo3d(neededShapes.left),\r\n      middle: shape2dTo3d(neededShapes.middle),\r\n      right: shape2dTo3d(neededShapes.right),\r\n    });\r\n    console.log(newChecks);\r\n    setChecks(newChecks);\r\n\r\n    setDissections(newDissections);\r\n  };\r\n\r\n  useEffect(() => {}, []);\r\n\r\n  return (\r\n    <div className=\"flex w-full flex-col items-center gap-2\">\r\n      <p className=\"font-bold text-2xl font-display tracking-tighter\">\r\n        Verity Callouts\r\n      </p>\r\n      <p className=\"text-xl font-semibold\">Inside / Solo</p>\r\n\r\n      <div className=\"flex\">\r\n        <div className=\"flex flex-col items-center\">\r\n          <p className=\"\">Left</p>\r\n          <InsideCallouts\r\n            side={\"left\"}\r\n            selectedShapes={insideShapes}\r\n            handleInsideShapeChange={handleInsideShapeChange}\r\n          />\r\n        </div>\r\n        <div className=\"divider divider-horizontal\" />\r\n        <div className=\"flex flex-col items-center\">\r\n          <p className=\"\">Middle</p>\r\n          <InsideCallouts\r\n            side={\"middle\"}\r\n            selectedShapes={insideShapes}\r\n            handleInsideShapeChange={handleInsideShapeChange}\r\n          />\r\n        </div>\r\n        <div className=\"divider divider-horizontal\" />\r\n        <div className=\"flex flex-col items-center\">\r\n          <p className=\"\">Right</p>\r\n          <InsideCallouts\r\n            side={\"right\"}\r\n            selectedShapes={insideShapes}\r\n            handleInsideShapeChange={handleInsideShapeChange}\r\n          />\r\n        </div>\r\n      </div>\r\n      <p className=\"text-xl font-semibold\">Outside / Team</p>\r\n      <div className=\"flex\">\r\n        <div className=\"flex gap-4\">\r\n          <div className=\"flex flex-col items-center\">\r\n            <OutsideCallouts\r\n              side={\"left\"}\r\n              selectedShapes={outsideShapes}\r\n              handleOutsideShapeChange={handleOutsideShapeChange}\r\n            />\r\n          </div>\r\n        </div>\r\n        <div className=\"divider divider-horizontal\" />\r\n        <div className=\"flex gap-4\">\r\n          <div className=\"flex flex-col items-center\">\r\n            <OutsideCallouts\r\n              side={\"middle\"}\r\n              selectedShapes={outsideShapes}\r\n              handleOutsideShapeChange={handleOutsideShapeChange}\r\n            />\r\n          </div>\r\n        </div>\r\n        <div className=\"divider divider-horizontal\" />\r\n        <div className=\"flex gap-4\">\r\n          <div className=\"flex flex-col items-center\">\r\n            <OutsideCallouts\r\n              side={\"right\"}\r\n              selectedShapes={outsideShapes}\r\n              handleOutsideShapeChange={handleOutsideShapeChange}\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n      {alert.message.length > 0 ? (\r\n        <div role=\"alert\" className={\"alert w-2/3 \" + alert.alertType}>\r\n          <svg\r\n            xmlns=\"http://www.w3.org/2000/svg\"\r\n            className=\"stroke-current shrink-0 h-6 w-6\"\r\n            fill=\"none\"\r\n            viewBox=\"0 0 24 24\"\r\n          >\r\n            <path\r\n              strokeLinecap=\"round\"\r\n              strokeLinejoin=\"round\"\r\n              strokeWidth=\"2\"\r\n              d=\"M10 14l2-2m0 0l2-2m-2 2l-2-2m2 2l2 2m7-2a9 9 0 11-18 0 9 9 0 0118 0z\"\r\n            />\r\n          </svg>\r\n          <span>{alert.message}</span>\r\n        </div>\r\n      ) : (\r\n        <></>\r\n      )}\r\n      <div className=\"flex gap-4 p-2\">\r\n        <button\r\n          className={\"btn btn-success\"}\r\n          onClick={() => {\r\n            findDissections();\r\n          }}\r\n        >\r\n          Find Dissections\r\n        </button>\r\n        <button\r\n          className={\"btn btn-outline btn-error\"}\r\n          onClick={() => {\r\n            setInsideShapes({ left: null, middle: null, right: null });\r\n            setOutsideShapes({ left: null, middle: null, right: null });\r\n            setAlert({\r\n              alertType: \"alert\",\r\n              message: \"\",\r\n            });\r\n            setOutsideResult({ left: null, middle: null, right: null });\r\n          }}\r\n        >\r\n          Reset\r\n        </button>\r\n      </div>\r\n      <p className=\"text-xl font-semibold\">Dissections</p>\r\n      <div className=\"flex flex-col items-center w-full\">\r\n        {dissections.length ? (\r\n          <p className=\"text-lg pb-4\">Here's what you should do:</p>\r\n        ) : (\r\n          <p>Set your shapes and click \"Find Dissections\"!</p>\r\n        )}\r\n        {checks?.map((check, index) => (\r\n          <div className=\"flex flex-col items-center gap-1 w-1/2\">\r\n            <p className=\"font-semibold\">Dissect:</p>\r\n            <div className=\"flex gap-4\">\r\n              {dissections.slice(index * 2, (index + 1) * 2).map((d) => (\r\n                <p className=\"flex flex-col items-center text-lg\">\r\n                  {d.side.toLocaleUpperCase()}\r\n                  {insideShapeElements[d.shape]}\r\n                </p>\r\n              ))}\r\n            </div>\r\n            <p className=\"font-medium pt-2\">Double check your work:</p>\r\n            <div className=\"flex gap-4\">\r\n              <div className=\"flex flex-col items-center\">\r\n                <p className=\"\">LEFT</p>\r\n                {outsideShapeElements[check.left as OutsideShape]}\r\n              </div>\r\n              <div className=\"divider divider-horizontal\" />\r\n              <div className=\"flex flex-col items-center\">\r\n                <p className=\"\">MIDDLE</p>\r\n                {outsideShapeElements[check.middle as OutsideShape]}\r\n              </div>\r\n              <div className=\"divider divider-horizontal\" />\r\n              <div className=\"flex flex-col items-center\">\r\n                <p className=\"\">RIGHT</p>\r\n                {outsideShapeElements[check.right as OutsideShape]}\r\n              </div>\r\n            </div>\r\n            <div className=\"divider\" />\r\n          </div>\r\n        ))}\r\n      </div>\r\n\r\n      <div className=\"divider font-display\" />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default VerityCallouts;\r\n","import VerityCallouts from \"./VerityCallouts\";\r\nexport default VerityCallouts;\r\n","import {\r\n  Dissection,\r\n  InsideShape,\r\n  OutsideShape,\r\n  OutsideShapeCalls,\r\n  VerityResult,\r\n  VeritySide,\r\n} from \"types/verity\";\r\n\r\nconst sides: VeritySide[] = [\"left\", \"middle\", \"right\"];\r\n\r\nexport const createCommaSeparatedString = (arr: string[]): string => {\r\n  if (arr.length === 0) return \"\";\r\n  if (arr.length === 1) return arr[0];\r\n  if (arr.length === 2) return `${arr[0]} and ${arr[1]}`;\r\n\r\n  const allButLast = arr.slice(0, -1).join(\", \");\r\n  const lastItem = arr[arr.length - 1];\r\n\r\n  return `${allButLast}, and ${lastItem}`;\r\n};\r\n\r\nexport const shape3dTo2d: { [key in OutsideShape]: InsideShape[] } = {\r\n  cone: [\"circle\", \"triangle\"],\r\n  cube: [\"square\", \"square\"],\r\n  cylinder: [\"circle\", \"square\"],\r\n  prism: [\"triangle\", \"square\"],\r\n  pyramid: [\"triangle\", \"triangle\"],\r\n  sphere: [\"circle\", \"circle\"],\r\n};\r\n\r\nexport const shape2dTo3d = (\r\n  insideShapes: InsideShape[]\r\n): OutsideShape | null => {\r\n  for (const [outsideShape, mappedInsideShapes] of Object.entries(\r\n    shape3dTo2d\r\n  )) {\r\n    if (\r\n      JSON.stringify(mappedInsideShapes.sort()) ===\r\n      JSON.stringify(insideShapes.sort())\r\n    ) {\r\n      return outsideShape as OutsideShape;\r\n    }\r\n  }\r\n  return null; // Return null if no matching OutsideShape is found\r\n};\r\n\r\nexport const insideShapeToNeededShapes: {\r\n  [key in InsideShape]: InsideShape[];\r\n} = {\r\n  circle: [\"triangle\", \"square\"],\r\n  square: [\"circle\", \"triangle\"],\r\n  triangle: [\"circle\", \"square\"],\r\n};\r\n\r\nexport const getAvailableShapes = (\r\n  outsideShapes: OutsideShapeCalls\r\n): InsideShape[] => {\r\n  const availableShapes: InsideShape[] = [\r\n    \"circle\",\r\n    \"circle\",\r\n    \"triangle\",\r\n    \"triangle\",\r\n    \"square\",\r\n    \"square\",\r\n  ];\r\n  for (const call of Object.values(outsideShapes)) {\r\n    if (call === null) {\r\n      continue;\r\n    }\r\n    for (const add of shape3dTo2d[call as keyof typeof shape3dTo2d]) {\r\n      availableShapes.splice(availableShapes.indexOf(add), 1);\r\n    }\r\n  }\r\n  return availableShapes;\r\n};\r\n\r\nexport const getOutsideShapesLeft = (\r\n  insideShapes: InsideShape[]\r\n): OutsideShape[] => {\r\n  const shapeCounts = insideShapes.reduce((counts, shape) => {\r\n    counts[shape] = ((counts[shape] || 0) as number) + 1;\r\n    return counts;\r\n  }, {} as { [key in InsideShape]?: number });\r\n  const possibleShapes: OutsideShape[] = [];\r\n  if (shapeCounts.circle === 2) possibleShapes.push(\"sphere\");\r\n  if (shapeCounts.square === 2) possibleShapes.push(\"cube\");\r\n  if (shapeCounts.triangle === 2) possibleShapes.push(\"pyramid\");\r\n  if (shapeCounts.circle && shapeCounts.triangle) possibleShapes.push(\"cone\");\r\n  if (shapeCounts.circle && shapeCounts.square) possibleShapes.push(\"cylinder\");\r\n  if (shapeCounts.triangle && shapeCounts.square) possibleShapes.push(\"prism\");\r\n\r\n  return possibleShapes;\r\n};\r\n\r\nexport const replaceNonEnglish = (str: string) => {\r\n  return str.replace(\"ê\", \"e\").replace(\"à\", \"a\").replace(\"È\", \"E\");\r\n};\r\n"],"names":["Circle","_jsx","xmlns","version","viewBox","className","children","d","Square","Triangle","insideShapes","shapes","circle","square","triangle","_ref","side","selectedShapes","handleInsideShapeChange","map","shape","onClick","disabled","Object","values","includes","Cone","Cube","_jsxs","fillRule","Cylinder","Prism","Pyramid","Sphere","nonSquaredOutsideShapes","squaredOutsideShapes","cone","cylinder","prism","cube","pyramid","sphere","handleOutsideShapeChange","checkDisabledButton","available2dShapes","getAvailableShapes","available3dShapes","getOutsideShapesLeft","selectedShape","filter","x","length","outsideShapeElements","insideShapeElements","VerityCallouts","alert","setAlert","useState","alertType","message","setInsideShapes","left","middle","right","outsideShapes","setOutsideShapes","dissections","setDissections","outsideResult","setOutsideResult","checks","setChecks","newShapes","console","log","useEffect","InsideCallouts","OutsideCallouts","role","fill","strokeLinecap","strokeLinejoin","strokeWidth","_Fragment","findDissections","inputsMissing","push","concat","createCommaSeparatedString","currentShapes","shape3dTo2d","neededShapes","insideShapeToNeededShapes","neededDissections","removedDissections","newChecks","newDissections","index","indexOf","shape2dTo3d","check","slice","toLocaleUpperCase","arr","allButLast","join","lastItem","outsideShape","mappedInsideShapes","entries","JSON","stringify","sort","availableShapes","call","add","splice","shapeCounts","reduce","counts","possibleShapes","replaceNonEnglish","str","replace"],"sourceRoot":""}